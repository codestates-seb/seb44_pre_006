{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n//1.5 회원 질문, 답변 정보 조회\nconst URL = process.env.REACT_APP_EC2_URL;\nconst fetchGetUserQnA = createAsyncThunk('user/fetchGetUserQnA', async memberId => {\n  const url = `/users/getInfo/${memberId}`;\n  const token = localStorage.getItem('jwtToken');\n  const response = await axios.get(url, {\n    headers: {\n      Authorization: token\n    }\n  });\n  try {\n    if (response.status >= 200 && response.status < 300) return response.data;\n  } catch (error) {\n    return error;\n  }\n});\nexport default fetchGetUserQnA;","map":{"version":3,"names":["createAsyncThunk","axios","URL","process","env","REACT_APP_EC2_URL","fetchGetUserQnA","memberId","url","token","localStorage","getItem","response","get","headers","Authorization","status","data","error"],"sources":["/Users/jiinpark/seb44_pre_006/client/src/api/getUserQnA.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n//1.5 회원 질문, 답변 정보 조회\nconst URL = process.env.REACT_APP_EC2_URL;\n\nconst fetchGetUserQnA = createAsyncThunk('user/fetchGetUserQnA', async (memberId) => {\n  const url = `/users/getInfo/${memberId}`;\n  const token = localStorage.getItem('jwtToken');\n\n  const response = await axios.get(url, {\n    headers: {\n      Authorization: token\n    },\n  })\n  \n  try {\n    if (response.status >= 200 && response.status < 300)\n    return response.data; \n  } \n  catch (error) {\n    return error;\n  }\n});\n\nexport default fetchGetUserQnA"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,eAAe,GAAGN,gBAAgB,CAAC,sBAAsB,EAAE,MAAOO,QAAQ,IAAK;EACnF,MAAMC,GAAG,GAAI,kBAAiBD,QAAS,EAAC;EACxC,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAE9C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACL,GAAG,EAAE;IACpCM,OAAO,EAAE;MACPC,aAAa,EAAEN;IACjB;EACF,CAAC,CAAC;EAEF,IAAI;IACF,IAAIG,QAAQ,CAACI,MAAM,IAAI,GAAG,IAAIJ,QAAQ,CAACI,MAAM,GAAG,GAAG,EACnD,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CACD,OAAOC,KAAK,EAAE;IACZ,OAAOA,KAAK;EACd;AACF,CAAC,CAAC;AAEF,eAAeZ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}