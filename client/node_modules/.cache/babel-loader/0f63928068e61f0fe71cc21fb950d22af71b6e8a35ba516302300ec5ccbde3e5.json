{"ast":null,"code":"const displayCreatedAt = createdAt => {\n  const time = new Date(createdAt);\n  time.setHours(time.getHours() + 9); // 한국 시간대로 맞추기 위해 9시간을 더함.\n\n  const milliSeconds = new Date() - time;\n  const seconds = milliSeconds / 1000;\n  const minutes = seconds / 60;\n  const hours = minutes / 60;\n  const days = hours / 24;\n  const weeks = days / 7;\n  const months = days / 30;\n  const years = days / 365;\n  if (seconds < 60) return `${seconds} secs ago`;\n  if (minutes < 60) return `${Math.floor(minutes)} min ago`;\n  if (hours < 24) return `${Math.floor(hours)} hour ago`;\n  if (days < 7) return `${Math.floor(days)} day ago`;\n  if (weeks < 5) return `${Math.floor(weeks)} week ago`;\n  if (months < 12) return `${Math.floor(months)} month ago`;\n  if (years < 2) return `${Math.floor(years)} year ago`;\n  return `${time}`;\n};\nexport default displayCreatedAt;","map":{"version":3,"names":["displayCreatedAt","createdAt","time","Date","setHours","getHours","milliSeconds","seconds","minutes","hours","days","weeks","months","years","Math","floor"],"sources":["/Users/jiinpark/seb44_pre_006/client/src/utils/displayCreateAt.js"],"sourcesContent":["const displayCreatedAt = createdAt => {\n  const time = new Date(createdAt);\n  time.setHours(time.getHours() + 9); // 한국 시간대로 맞추기 위해 9시간을 더함.\n\n  const milliSeconds = new Date() - time;\n  const seconds = milliSeconds / 1000;\n  const minutes = seconds / 60;\n  const hours = minutes / 60;\n  const days = hours / 24;\n  const weeks = days / 7;\n  const months = days / 30;\n  const years = days / 365;\n\n  if (seconds < 60) return `${seconds} secs ago`;\n  if (minutes < 60) return `${Math.floor(minutes)} min ago`;\n  if (hours < 24) return `${Math.floor(hours)} hour ago`;\n  if (days < 7) return `${Math.floor(days)} day ago`;\n  if (weeks < 5) return `${Math.floor(weeks)} week ago`;\n  if (months < 12) return `${Math.floor(months)} month ago`;\n  if (years < 2) return `${Math.floor(years)} year ago`;\n  return `${time}`;\n};\n\nexport default displayCreatedAt;"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,SAAS,IAAI;EACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChCC,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEpC,MAAMC,YAAY,GAAG,IAAIH,IAAI,CAAC,CAAC,GAAGD,IAAI;EACtC,MAAMK,OAAO,GAAGD,YAAY,GAAG,IAAI;EACnC,MAAME,OAAO,GAAGD,OAAO,GAAG,EAAE;EAC5B,MAAME,KAAK,GAAGD,OAAO,GAAG,EAAE;EAC1B,MAAME,IAAI,GAAGD,KAAK,GAAG,EAAE;EACvB,MAAME,KAAK,GAAGD,IAAI,GAAG,CAAC;EACtB,MAAME,MAAM,GAAGF,IAAI,GAAG,EAAE;EACxB,MAAMG,KAAK,GAAGH,IAAI,GAAG,GAAG;EAExB,IAAIH,OAAO,GAAG,EAAE,EAAE,OAAQ,GAAEA,OAAQ,WAAU;EAC9C,IAAIC,OAAO,GAAG,EAAE,EAAE,OAAQ,GAAEM,IAAI,CAACC,KAAK,CAACP,OAAO,CAAE,UAAS;EACzD,IAAIC,KAAK,GAAG,EAAE,EAAE,OAAQ,GAAEK,IAAI,CAACC,KAAK,CAACN,KAAK,CAAE,WAAU;EACtD,IAAIC,IAAI,GAAG,CAAC,EAAE,OAAQ,GAAEI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAE,UAAS;EAClD,IAAIC,KAAK,GAAG,CAAC,EAAE,OAAQ,GAAEG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAE,WAAU;EACrD,IAAIC,MAAM,GAAG,EAAE,EAAE,OAAQ,GAAEE,IAAI,CAACC,KAAK,CAACH,MAAM,CAAE,YAAW;EACzD,IAAIC,KAAK,GAAG,CAAC,EAAE,OAAQ,GAAEC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAE,WAAU;EACrD,OAAQ,GAAEX,IAAK,EAAC;AAClB,CAAC;AAED,eAAeF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}