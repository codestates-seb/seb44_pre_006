{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchUser } from '../api/getUser';\nconst initialState = {\n  data: {\n    memberId: 0,\n    email: '',\n    name: '',\n    admin: false\n  }\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    resetUser(state) {\n      state.data.memberId = 0;\n      state.data.email = '';\n      state.data.name = '';\n      state.data.admin = false;\n    },\n    setUser(state, action) {\n      state.data.name = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUser.fulfilled, (state, action) => {\n      state.data.memberId = action.payload.data.memberId;\n      state.data.email = action.payload.data.email;\n      state.data.name = action.payload.data.name;\n      if (action.payload.data.email === process.env.REACT_APP_ADMIN_ID) state.data.admin = true;\n    });\n  }\n});\nexport default userSlice;\nexport const {\n  resetUser,\n  setUser\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","fetchUser","initialState","data","memberId","email","name","admin","userSlice","reducers","resetUser","state","setUser","action","payload","extraReducers","builder","addCase","fulfilled","process","env","REACT_APP_ADMIN_ID","actions"],"sources":["/Users/han/Projects/seb44_pre_006/client/src/store/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchUser } from '../api/getUser';\n\nconst  initialState = {\n  data : {\n    memberId : 0,\n    email : '',\n    name : '',\n    admin : false\n  }\n}\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n      resetUser(state) {\n        state.data.memberId = 0;\n        state.data.email = '';\n        state.data.name = '';\n        state.data.admin = false;\n      },\n      setUser(state, action) {\n        state.data.name = action.payload;\n      }\n    },\n    extraReducers : builder => { \n      builder.addCase(fetchUser.fulfilled, (state, action) => {\n        state.data.memberId = action.payload.data.memberId;\n        state.data.email = action.payload.data.email;\n        state.data.name = action.payload.data.name;\n        if(action.payload.data.email === process.env.REACT_APP_ADMIN_ID)\n          state.data.admin = true;\n      })\n    }\n  });\n\nexport default userSlice;\nexport const { resetUser, setUser } = userSlice.actions;\n  "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAOC,YAAY,GAAG;EACpBC,IAAI,EAAG;IACLC,QAAQ,EAAG,CAAC;IACZC,KAAK,EAAG,EAAE;IACVC,IAAI,EAAG,EAAE;IACTC,KAAK,EAAG;EACV;AACF,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZO,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACR,IAAI,CAACC,QAAQ,GAAG,CAAC;MACvBO,KAAK,CAACR,IAAI,CAACE,KAAK,GAAG,EAAE;MACrBM,KAAK,CAACR,IAAI,CAACG,IAAI,GAAG,EAAE;MACpBK,KAAK,CAACR,IAAI,CAACI,KAAK,GAAG,KAAK;IAC1B,CAAC;IACDK,OAAOA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACrBF,KAAK,CAACR,IAAI,CAACG,IAAI,GAAGO,MAAM,CAACC,OAAO;IAClC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAI;IACzBA,OAAO,CAACC,OAAO,CAAChB,SAAS,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACR,IAAI,CAACC,QAAQ,GAAGS,MAAM,CAACC,OAAO,CAACX,IAAI,CAACC,QAAQ;MAClDO,KAAK,CAACR,IAAI,CAACE,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACX,IAAI,CAACE,KAAK;MAC5CM,KAAK,CAACR,IAAI,CAACG,IAAI,GAAGO,MAAM,CAACC,OAAO,CAACX,IAAI,CAACG,IAAI;MAC1C,IAAGO,MAAM,CAACC,OAAO,CAACX,IAAI,CAACE,KAAK,KAAKc,OAAO,CAACC,GAAG,CAACC,kBAAkB,EAC7DV,KAAK,CAACR,IAAI,CAACI,KAAK,GAAG,IAAI;IAC3B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEJ,eAAeC,SAAS;AACxB,OAAO,MAAM;EAAEE,SAAS;EAAEE;AAAQ,CAAC,GAAGJ,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}