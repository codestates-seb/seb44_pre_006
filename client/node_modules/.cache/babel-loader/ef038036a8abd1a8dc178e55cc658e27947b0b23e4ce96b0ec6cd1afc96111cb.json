{"ast":null,"code":"/*!\n * TOAST UI Color Picker\n * @version 2.2.8\n * @author NHN Cloud FE Development Team <dl_javascript@nhn.com>\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"colorPicker\"] = factory();else root[\"tui\"] = root[\"tui\"] || {}, root[\"tui\"][\"colorPicker\"] = factory();\n})(window, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __webpack_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __webpack_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __webpack_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __webpack_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"dist\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = 33);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Extend the target object from other objects.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module object\n       */\n\n      /**\n       * Extend the target object from other objects.\n       * @param {object} target - Object that will be extended\n       * @param {...object} objects - Objects as sources\n       * @returns {object} Extended object\n       * @memberof module:object\n       */\n      function extend(target, objects) {\n        // eslint-disable-line no-unused-vars\n        var hasOwnProp = Object.prototype.hasOwnProperty;\n        var source, prop, i, len;\n        for (i = 1, len = arguments.length; i < len; i += 1) {\n          source = arguments[i];\n          for (prop in source) {\n            if (hasOwnProp.call(source, prop)) {\n              target[prop] = source[prop];\n            }\n          }\n        }\n        return target;\n      }\n      module.exports = extend;\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is an instance of Array or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an instance of Array or not.\n       * If the given variable is an instance of Array, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is array instance?\n       * @memberof module:type\n       */\n      function isArray(obj) {\n        return obj instanceof Array;\n      }\n      module.exports = isArray;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isArray = __webpack_require__(1);\n      var forEachArray = __webpack_require__(6);\n      var forEachOwnProperties = __webpack_require__(7);\n\n      /**\n       * @module collection\n       */\n\n      /**\n       * Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * If the object is Array-like object(ex-arguments object), It needs to transform to Array.(see 'ex2' of example).\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property(or The value of the element)\n       *  2) The name of the property(or The index of the element)\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEach = require('tui-code-snippet/collection/forEach'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEach([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       *\n       * // In case of Array-like object\n       * var array = Array.prototype.slice.call(arrayLike); // change to array\n       * forEach(array, function(value){\n       *     sum += value;\n       * });\n       */\n      function forEach(obj, iteratee, context) {\n        if (isArray(obj)) {\n          forEachArray(obj, iteratee, context);\n        } else {\n          forEachOwnProperties(obj, iteratee, context);\n        }\n      }\n      module.exports = forEach;\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is undefined or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is undefined or not.\n       * If the given variable is undefined, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is undefined?\n       * @memberof module:type\n       */\n      function isUndefined(obj) {\n        return obj === undefined; // eslint-disable-line no-undefined\n      }\n\n      module.exports = isUndefined;\n\n      /***/\n    }, /* 4 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Utils for ColorPicker component\n       */\n      var browser = __webpack_require__(22);\n      var forEach = __webpack_require__(2);\n      var forEachArray = __webpack_require__(6);\n      var forEachOwnProperties = __webpack_require__(7);\n      var sendHostname = __webpack_require__(37);\n      var currentId = 0;\n      /**\n       * Utils\n       * @namespace util\n       * @ignore\n       */\n\n      var utils = {\n        /**\n         * Get the number of properties in the object.\n         * @param {Object} obj - object\n         * @returns {number}\n         */\n        getLength: function (obj) {\n          var length = 0;\n          forEachOwnProperties(obj, function () {\n            length += 1;\n          });\n          return length;\n        },\n        /**\n         * Constructs a new array by executing the provided callback function.\n         * @param {Object|Array} obj - object or array to be traversed\n         * @param {function} iteratee - callback function\n         * @param {Object} context - context of callback function\n         * @returns {Array}\n         */\n        map: function (obj, iteratee, context) {\n          var result = [];\n          forEach(obj, function () {\n            result.push(iteratee.apply(context || null, arguments));\n          });\n          return result;\n        },\n        /**\n         * Construct a new array with elements that pass the test by the provided callback function.\n         * @param {Array|NodeList|Arguments} arr - array to be traversed\n         * @param {function} iteratee - callback function\n         * @param {Object} context - context of callback function\n         * @returns {Array}\n         */\n        filter: function (arr, iteratee, context) {\n          var result = [];\n          forEachArray(arr, function (elem) {\n            if (iteratee.apply(context || null, arguments)) {\n              result.push(elem);\n            }\n          });\n          return result;\n        },\n        /**\n         * Create an unique id for a color-picker instance.\n         * @returns {number}\n         */\n        generateId: function () {\n          currentId += 1;\n          return currentId;\n        },\n        /**\n         * True when browser is below IE8.\n         */\n        isOldBrowser: function () {\n          return browser.msie && browser.version < 9;\n        }(),\n        /**\n         * send host name\n         * @ignore\n         */\n        sendHostName: function () {\n          sendHostname('color-picker', 'UA-129987462-1');\n        }\n      };\n      module.exports = utils;\n\n      /***/\n    }, /* 5 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /* eslint-disable complexity */\n      /**\n       * @fileoverview Returns the first index at which a given element can be found in the array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isArray = __webpack_require__(1);\n\n      /**\n       * @module array\n       */\n\n      /**\n       * Returns the first index at which a given element can be found in the array\n       * from start index(default 0), or -1 if it is not present.\n       * It compares searchElement to elements of the Array using strict equality\n       * (the same method used by the ===, or triple-equals, operator).\n       * @param {*} searchElement Element to locate in the array\n       * @param {Array} array Array that will be traversed.\n       * @param {number} startIndex Start index in array for searching (default 0)\n       * @returns {number} the First index at which a given element, or -1 if it is not present\n       * @memberof module:array\n       * @example\n       * var inArray = require('tui-code-snippet/array/inArray'); // node, commonjs\n       *\n       * var arr = ['one', 'two', 'three', 'four'];\n       * var idx1 = inArray('one', arr, 3); // -1\n       * var idx2 = inArray('one', arr); // 0\n       */\n      function inArray(searchElement, array, startIndex) {\n        var i;\n        var length;\n        startIndex = startIndex || 0;\n        if (!isArray(array)) {\n          return -1;\n        }\n        if (Array.prototype.indexOf) {\n          return Array.prototype.indexOf.call(array, searchElement, startIndex);\n        }\n        length = array.length;\n        for (i = startIndex; startIndex >= 0 && i < length; i += 1) {\n          if (array[i] === searchElement) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      module.exports = inArray;\n\n      /***/\n    }, /* 6 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each element present\n       * in the array(or Array-like object) in ascending order.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the element\n       *  2) The index of the element\n       *  3) The array(or Array-like object) being traversed\n       * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachArray = require('tui-code-snippet/collection/forEachArray'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachArray([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n      function forEachArray(arr, iteratee, context) {\n        var index = 0;\n        var len = arr.length;\n        context = context || null;\n        for (; index < len; index += 1) {\n          if (iteratee.call(context, arr[index], index, arr) === false) {\n            break;\n          }\n        }\n      }\n      module.exports = forEachArray;\n\n      /***/\n    }, /* 7 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Execute the provided callback once for each property of object which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each property of object which actually exist.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property\n       *  2) The name of the property\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee  Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachOwnProperties = require('tui-code-snippet/collection/forEachOwnProperties'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachOwnProperties({a:1,b:2,c:3}, function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n      function forEachOwnProperties(obj, iteratee, context) {\n        var key;\n        context = context || null;\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (iteratee.call(context, obj[key], key, obj) === false) {\n              break;\n            }\n          }\n        }\n      }\n      module.exports = forEachOwnProperties;\n\n      /***/\n    }, /* 8 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview The base class of views.\n       */\n      var addClass = __webpack_require__(39);\n      var isFunction = __webpack_require__(13);\n      var isNumber = __webpack_require__(41);\n      var isUndefined = __webpack_require__(3);\n      var domUtil = __webpack_require__(9);\n      var Collection = __webpack_require__(19);\n      var util = __webpack_require__(4);\n      /**\n       * Base class of views.\n       *\n       * All views create own container element inside supplied container element.\n       * @constructor\n       * @param {options} options The object for describe view's specs.\n       * @param {HTMLElement} container Default container element for view. you can use this element for this.container syntax.\n       * @ignore\n       */\n\n      function View(options, container) {\n        var id = util.generateId();\n        options = options || {};\n        if (isUndefined(container)) {\n          container = domUtil.appendHTMLElement('div');\n        }\n        addClass(container, 'tui-view-' + id);\n        /**\n         * unique id\n         * @type {number}\n         */\n\n        this.id = id;\n        /**\n         * base element of view.\n         * @type {HTMLDIVElement}\n         */\n\n        this.container = container;\n        /**\n         * child views.\n         * @type {Collection}\n         */\n\n        this.childs = new Collection(function (view) {\n          return view.id;\n        });\n        /**\n         * parent view instance.\n         * @type {View}\n         */\n\n        this.parent = null;\n      }\n      /**\n       * Add child views.\n       * @param {View} view The view instance to add.\n       * @param {function} [fn] Function for invoke before add. parent view class is supplied first arguments.\n       */\n\n      View.prototype.addChild = function (view, fn) {\n        if (fn) {\n          fn.call(view, this);\n        } // add parent view\n\n        view.parent = this;\n        this.childs.add(view);\n      };\n      /**\n       * Remove added child view.\n       * @param {(number|View)} id View id or instance itself to remove.\n       * @param {function} [fn] Function for invoke before remove. parent view class is supplied first arguments.\n       */\n\n      View.prototype.removeChild = function (id, fn) {\n        var view = isNumber(id) ? this.childs.items[id] : id;\n        if (fn) {\n          fn.call(view, this);\n        }\n        this.childs.remove(view.id);\n      };\n      /**\n       * Render view recursively.\n       */\n\n      View.prototype.render = function () {\n        this.childs.each(function (childView) {\n          childView.render();\n        });\n      };\n      /**\n       * Invoke function recursively.\n       * @param {function} fn - function to invoke child view recursively\n       * @param {boolean} [skipThis=false] - set true then skip invoke with this(root) view.\n       */\n\n      View.prototype.recursive = function (fn, skipThis) {\n        if (!isFunction(fn)) {\n          return;\n        }\n        if (!skipThis) {\n          fn(this);\n        }\n        this.childs.each(function (childView) {\n          childView.recursive(fn);\n        });\n      };\n      /**\n       * Resize view recursively to parent.\n       */\n\n      View.prototype.resize = function () {\n        var args = Array.prototype.slice.call(arguments);\n        var parent = this.parent;\n        while (parent) {\n          if (isFunction(parent._onResize)) {\n            parent._onResize.apply(parent, args);\n          }\n          parent = parent.parent;\n        }\n      };\n      /**\n       * Invoking method before destroying.\n       */\n\n      View.prototype._beforeDestroy = function () {};\n      /**\n       * Clear properties\n       */\n\n      View.prototype._destroy = function () {\n        this._beforeDestroy();\n        this.container.innerHTML = '';\n        this.id = this.parent = this.childs = this.container = null;\n      };\n      /**\n       * Destroy child view recursively.\n       * @param {boolean} isChildView - Whether it is the child view or not\n       */\n\n      View.prototype.destroy = function (isChildView) {\n        if (this.childs) {\n          this.childs.each(function (childView) {\n            childView.destroy(true);\n            childView._destroy();\n          });\n          this.childs.clear();\n        }\n        if (isChildView) {\n          return;\n        }\n        this._destroy();\n      };\n      /**\n       * Calculate view's container element bound.\n       * @returns {object} The bound of container element.\n       */\n\n      View.prototype.getViewBound = function () {\n        var bound = this.container.getBoundingClientRect();\n        return {\n          x: bound.left,\n          y: bound.top,\n          width: bound.right - bound.left,\n          height: bound.bottom - bound.top\n        };\n      };\n      module.exports = View;\n\n      /***/\n    }, /* 9 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Utility modules for manipulate DOM elements.\n       */\n      var domUtil = {\n        /**\n         * Create DOM element and return it.\n         * @param {string} tagName Tag name to append.\n         * @param {HTMLElement} [container] HTML element will be parent to created element.\n         * if not supplied, will use **document.body**\n         * @param {string} [className] Design class names to appling created element.\n         * @returns {HTMLElement} HTML element created.\n         */\n        appendHTMLElement: function (tagName, container, className) {\n          var el = document.createElement(tagName);\n          el.className = className || '';\n          if (container) {\n            container.appendChild(el);\n          } else {\n            document.body.appendChild(el);\n          }\n          return el;\n        }\n      };\n      module.exports = domUtil;\n\n      /***/\n    }, /* 10 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview This module provides some functions for custom events. And it is implemented in the observer design pattern.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var extend = __webpack_require__(0);\n      var isExisty = __webpack_require__(20);\n      var isString = __webpack_require__(11);\n      var isObject = __webpack_require__(21);\n      var isArray = __webpack_require__(1);\n      var isFunction = __webpack_require__(13);\n      var forEach = __webpack_require__(2);\n      var R_EVENTNAME_SPLIT = /\\s+/g;\n\n      /**\n       * @class\n       * @example\n       * // node, commonjs\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents');\n       */\n      function CustomEvents() {\n        /**\n           * @type {HandlerItem[]}\n           */\n        this.events = null;\n\n        /**\n           * only for checking specific context event was binded\n           * @type {object[]}\n           */\n        this.contexts = null;\n      }\n\n      /**\n       * Mixin custom events feature to specific constructor\n       * @param {function} func - constructor\n       * @example\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * var model;\n       * function Model() {\n       *     this.name = '';\n       * }\n       * CustomEvents.mixin(Model);\n       *\n       * model = new Model();\n       * model.on('change', function() { this.name = 'model'; }, this);\n       * model.fire('change');\n       * alert(model.name); // 'model';\n       */\n      CustomEvents.mixin = function (func) {\n        extend(func.prototype, CustomEvents.prototype);\n      };\n\n      /**\n       * Get HandlerItem object\n       * @param {function} handler - handler function\n       * @param {object} [context] - context for handler\n       * @returns {HandlerItem} HandlerItem object\n       * @private\n       */\n      CustomEvents.prototype._getHandlerItem = function (handler, context) {\n        var item = {\n          handler: handler\n        };\n        if (context) {\n          item.context = context;\n        }\n        return item;\n      };\n\n      /**\n       * Get event object safely\n       * @param {string} [eventName] - create sub event map if not exist.\n       * @returns {(object|array)} event object. if you supplied `eventName`\n       *  parameter then make new array and return it\n       * @private\n       */\n      CustomEvents.prototype._safeEvent = function (eventName) {\n        var events = this.events;\n        var byName;\n        if (!events) {\n          events = this.events = {};\n        }\n        if (eventName) {\n          byName = events[eventName];\n          if (!byName) {\n            byName = [];\n            events[eventName] = byName;\n          }\n          events = byName;\n        }\n        return events;\n      };\n\n      /**\n       * Get context array safely\n       * @returns {array} context array\n       * @private\n       */\n      CustomEvents.prototype._safeContext = function () {\n        var context = this.contexts;\n        if (!context) {\n          context = this.contexts = [];\n        }\n        return context;\n      };\n\n      /**\n       * Get index of context\n       * @param {object} ctx - context that used for bind custom event\n       * @returns {number} index of context\n       * @private\n       */\n      CustomEvents.prototype._indexOfContext = function (ctx) {\n        var context = this._safeContext();\n        var index = 0;\n        while (context[index]) {\n          if (ctx === context[index][0]) {\n            return index;\n          }\n          index += 1;\n        }\n        return -1;\n      };\n\n      /**\n       * Memorize supplied context for recognize supplied object is context or\n       *  name: handler pair object when off()\n       * @param {object} ctx - context object to memorize\n       * @private\n       */\n      CustomEvents.prototype._memorizeContext = function (ctx) {\n        var context, index;\n        if (!isExisty(ctx)) {\n          return;\n        }\n        context = this._safeContext();\n        index = this._indexOfContext(ctx);\n        if (index > -1) {\n          context[index][1] += 1;\n        } else {\n          context.push([ctx, 1]);\n        }\n      };\n\n      /**\n       * Forget supplied context object\n       * @param {object} ctx - context object to forget\n       * @private\n       */\n      CustomEvents.prototype._forgetContext = function (ctx) {\n        var context, contextIndex;\n        if (!isExisty(ctx)) {\n          return;\n        }\n        context = this._safeContext();\n        contextIndex = this._indexOfContext(ctx);\n        if (contextIndex > -1) {\n          context[contextIndex][1] -= 1;\n          if (context[contextIndex][1] <= 0) {\n            context.splice(contextIndex, 1);\n          }\n        }\n      };\n\n      /**\n       * Bind event handler\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * @private\n       */\n      CustomEvents.prototype._bindEvent = function (eventName, handler, context) {\n        var events = this._safeEvent(eventName);\n        this._memorizeContext(context);\n        events.push(this._getHandlerItem(handler, context));\n      };\n\n      /**\n       * Bind event handlers\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 Basic Usage\n       * CustomEvents.on('onload', handler);\n       *\n       * // # 2.2 With context\n       * CustomEvents.on('onload', handler, myObj);\n       *\n       * // # 2.3 Bind by object that name, handler pairs\n       * CustomEvents.on({\n       *     'play': handler,\n       *     'pause': handler2\n       * });\n       *\n       * // # 2.4 Bind by object that name, handler pairs with context object\n       * CustomEvents.on({\n       *     'play': handler\n       * }, myObj);\n       */\n      CustomEvents.prototype.on = function (eventName, handler, context) {\n        var self = this;\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          eventName = eventName.split(R_EVENTNAME_SPLIT);\n          forEach(eventName, function (name) {\n            self._bindEvent(name, handler, context);\n          });\n        } else if (isObject(eventName)) {\n          // [syntax 3, 4]\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.on(name, func, context);\n          });\n        }\n      };\n\n      /**\n       * Bind one-shot event handlers\n       * @param {(string|{name:string,handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {function|object} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       */\n      CustomEvents.prototype.once = function (eventName, handler, context) {\n        var self = this;\n        if (isObject(eventName)) {\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.once(name, func, context);\n          });\n          return;\n        }\n        function onceHandler() {\n          // eslint-disable-line require-jsdoc\n          handler.apply(context, arguments);\n          self.off(eventName, onceHandler, context);\n        }\n        this.on(eventName, onceHandler, context);\n      };\n\n      /**\n       * Splice supplied array by callback result\n       * @param {array} arr - array to splice\n       * @param {function} predicate - function return boolean\n       * @private\n       */\n      CustomEvents.prototype._spliceMatches = function (arr, predicate) {\n        var i = 0;\n        var len;\n        if (!isArray(arr)) {\n          return;\n        }\n        for (len = arr.length; i < len; i += 1) {\n          if (predicate(arr[i]) === true) {\n            arr.splice(i, 1);\n            len -= 1;\n            i -= 1;\n          }\n        }\n      };\n\n      /**\n       * Get matcher for unbind specific handler events\n       * @param {function} handler - handler function\n       * @returns {function} handler matcher\n       * @private\n       */\n      CustomEvents.prototype._matchHandler = function (handler) {\n        var self = this;\n        return function (item) {\n          var needRemove = handler === item.handler;\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n          return needRemove;\n        };\n      };\n\n      /**\n       * Get matcher for unbind specific context events\n       * @param {object} context - context\n       * @returns {function} object matcher\n       * @private\n       */\n      CustomEvents.prototype._matchContext = function (context) {\n        var self = this;\n        return function (item) {\n          var needRemove = context === item.context;\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n          return needRemove;\n        };\n      };\n\n      /**\n       * Get matcher for unbind specific hander, context pair events\n       * @param {function} handler - handler function\n       * @param {object} context - context\n       * @returns {function} handler, context matcher\n       * @private\n       */\n      CustomEvents.prototype._matchHandlerAndContext = function (handler, context) {\n        var self = this;\n        return function (item) {\n          var matchHandler = handler === item.handler;\n          var matchContext = context === item.context;\n          var needRemove = matchHandler && matchContext;\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n          return needRemove;\n        };\n      };\n\n      /**\n       * Unbind event by event name\n       * @param {string} eventName - custom event name to unbind\n       * @param {function} [handler] - handler function\n       * @private\n       */\n      CustomEvents.prototype._offByEventName = function (eventName, handler) {\n        var self = this;\n        var andByHandler = isFunction(handler);\n        var matchHandler = self._matchHandler(handler);\n        eventName = eventName.split(R_EVENTNAME_SPLIT);\n        forEach(eventName, function (name) {\n          var handlerItems = self._safeEvent(name);\n          if (andByHandler) {\n            self._spliceMatches(handlerItems, matchHandler);\n          } else {\n            forEach(handlerItems, function (item) {\n              self._forgetContext(item.context);\n            });\n            self.events[name] = [];\n          }\n        });\n      };\n\n      /**\n       * Unbind event by handler function\n       * @param {function} handler - handler function\n       * @private\n       */\n      CustomEvents.prototype._offByHandler = function (handler) {\n        var self = this;\n        var matchHandler = this._matchHandler(handler);\n        forEach(this._safeEvent(), function (handlerItems) {\n          self._spliceMatches(handlerItems, matchHandler);\n        });\n      };\n\n      /**\n       * Unbind event by object(name: handler pair object or context object)\n       * @param {object} obj - context or {name: handler} pair object\n       * @param {function} handler - handler function\n       * @private\n       */\n      CustomEvents.prototype._offByObject = function (obj, handler) {\n        var self = this;\n        var matchFunc;\n        if (this._indexOfContext(obj) < 0) {\n          forEach(obj, function (func, name) {\n            self.off(name, func);\n          });\n        } else if (isString(handler)) {\n          matchFunc = this._matchContext(obj);\n          self._spliceMatches(this._safeEvent(handler), matchFunc);\n        } else if (isFunction(handler)) {\n          matchFunc = this._matchHandlerAndContext(handler, obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        } else {\n          matchFunc = this._matchContext(obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        }\n      };\n\n      /**\n       * Unbind custom events\n       * @param {(string|object|function)} eventName - event name or context or\n       *  {name: handler} pair object or handler function\n       * @param {(function)} handler - handler function\n       * @example\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 off by event name\n       * CustomEvents.off('onload');\n       *\n       * // # 2.2 off by event name and handler\n       * CustomEvents.off('play', handler);\n       *\n       * // # 2.3 off by handler\n       * CustomEvents.off(handler);\n       *\n       * // # 2.4 off by context\n       * CustomEvents.off(myObj);\n       *\n       * // # 2.5 off by context and handler\n       * CustomEvents.off(myObj, handler);\n       *\n       * // # 2.6 off by context and event name\n       * CustomEvents.off(myObj, 'onload');\n       *\n       * // # 2.7 off by an Object.<string, function> that is {eventName: handler}\n       * CustomEvents.off({\n       *   'play': handler,\n       *   'pause': handler2\n       * });\n       *\n       * // # 2.8 off the all events\n       * CustomEvents.off();\n       */\n      CustomEvents.prototype.off = function (eventName, handler) {\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          this._offByEventName(eventName, handler);\n        } else if (!arguments.length) {\n          // [syntax 8]\n          this.events = {};\n          this.contexts = [];\n        } else if (isFunction(eventName)) {\n          // [syntax 3]\n          this._offByHandler(eventName);\n        } else if (isObject(eventName)) {\n          // [syntax 4, 5, 6]\n          this._offByObject(eventName, handler);\n        }\n      };\n\n      /**\n       * Fire custom event\n       * @param {string} eventName - name of custom event\n       */\n      CustomEvents.prototype.fire = function (eventName) {\n        // eslint-disable-line\n        this.invoke.apply(this, arguments);\n      };\n\n      /**\n       * Fire a event and returns the result of operation 'boolean AND' with all\n       *  listener's results.\n       *\n       * So, It is different from {@link CustomEvents#fire}.\n       *\n       * In service code, use this as a before event in component level usually\n       *  for notifying that the event is cancelable.\n       * @param {string} eventName - Custom event name\n       * @param {...*} data - Data for event\n       * @returns {boolean} The result of operation 'boolean AND'\n       * @example\n       * var map = new Map();\n       * map.on({\n       *     'beforeZoom': function() {\n       *         // It should cancel the 'zoom' event by some conditions.\n       *         if (that.disabled && this.getState()) {\n       *             return false;\n       *         }\n       *         return true;\n       *     }\n       * });\n       *\n       * if (this.invoke('beforeZoom')) {    // check the result of 'beforeZoom'\n       *     // if true,\n       *     // doSomething\n       * }\n       */\n      CustomEvents.prototype.invoke = function (eventName) {\n        var events, args, index, item;\n        if (!this.hasListener(eventName)) {\n          return true;\n        }\n        events = this._safeEvent(eventName);\n        args = Array.prototype.slice.call(arguments, 1);\n        index = 0;\n        while (events[index]) {\n          item = events[index];\n          if (item.handler.apply(item.context, args) === false) {\n            return false;\n          }\n          index += 1;\n        }\n        return true;\n      };\n\n      /**\n       * Return whether at least one of the handlers is registered in the given\n       *  event name.\n       * @param {string} eventName - Custom event name\n       * @returns {boolean} Is there at least one handler in event name?\n       */\n      CustomEvents.prototype.hasListener = function (eventName) {\n        return this.getListenerLength(eventName) > 0;\n      };\n\n      /**\n       * Return a count of events registered.\n       * @param {string} eventName - Custom event name\n       * @returns {number} number of event\n       */\n      CustomEvents.prototype.getListenerLength = function (eventName) {\n        var events = this._safeEvent(eventName);\n        return events.length;\n      };\n      module.exports = CustomEvents;\n\n      /***/\n    }, /* 11 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is a string or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a string or not.\n       * If the given variable is a string, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is string?\n       * @memberof module:type\n       */\n      function isString(obj) {\n        return typeof obj === 'string' || obj instanceof String;\n      }\n      module.exports = isString;\n\n      /***/\n    }, /* 12 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Utility methods to manipulate colors\n       */\n      var hexRX = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\n      var colorUtil = {\n        /**\n         * pad left zero characters.\n         * @param {number} number number value to pad zero.\n         * @param {number} length pad length to want.\n         * @returns {string} padded string.\n         */\n        leadingZero: function (number, length) {\n          var zero = '';\n          var i = 0;\n          if ((number + '').length > length) {\n            return number + '';\n          }\n          for (; i < length - 1; i += 1) {\n            zero += '0';\n          }\n          return (zero + number).slice(length * -1);\n        },\n        /**\n         * Check validate of hex string value is RGB\n         * @param {string} str - rgb hex string\n         * @returns {boolean} return true when supplied str is valid RGB hex string\n         */\n        isValidRGB: function (str) {\n          return hexRX.test(str);\n        },\n        // @license RGB <-> HSV conversion utilities based off of http://www.cs.rit.edu/~ncs/color/t_convert.html\n\n        /**\n         * Convert color hex string to rgb number array\n         * @param {string} hexStr - hex string\n         * @returns {number[]} rgb numbers\n         */\n        hexToRGB: function (hexStr) {\n          var r, g, b;\n          if (!colorUtil.isValidRGB(hexStr)) {\n            return false;\n          }\n          hexStr = hexStr.substring(1);\n          r = parseInt(hexStr.substr(0, 2), 16);\n          g = parseInt(hexStr.substr(2, 2), 16);\n          b = parseInt(hexStr.substr(4, 2), 16);\n          return [r, g, b];\n        },\n        /**\n         * Convert rgb number to hex string\n         * @param {number} r - red\n         * @param {number} g - green\n         * @param {number} b - blue\n         * @returns {string|boolean} return false when supplied rgb number is not valid. otherwise, converted hex string\n         */\n        rgbToHEX: function (r, g, b) {\n          var hexStr = '#' + colorUtil.leadingZero(r.toString(16), 2) + colorUtil.leadingZero(g.toString(16), 2) + colorUtil.leadingZero(b.toString(16), 2);\n          if (colorUtil.isValidRGB(hexStr)) {\n            return hexStr;\n          }\n          return false;\n        },\n        /**\n         * Convert rgb number to HSV value\n         * @param {number} r - red\n         * @param {number} g - green\n         * @param {number} b - blue\n         * @returns {number[]} hsv value\n         */\n        rgbToHSV: function (r, g, b) {\n          var max, min, h, s, v, d;\n          r /= 255;\n          g /= 255;\n          b /= 255;\n          max = Math.max(r, g, b);\n          min = Math.min(r, g, b);\n          v = max;\n          d = max - min;\n          s = max === 0 ? 0 : d / max;\n          if (max === min) {\n            h = 0;\n          } else {\n            switch (max) {\n              case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n              case g:\n                h = (b - r) / d + 2;\n                break;\n              case b:\n                h = (r - g) / d + 4;\n                break;\n              // no default\n            }\n\n            h /= 6;\n          }\n          return [Math.round(h * 360), Math.round(s * 100), Math.round(v * 100)];\n        },\n        /**\n         * Convert HSV number to RGB\n         * @param {number} h - hue\n         * @param {number} s - saturation\n         * @param {number} v - value\n         * @returns {number[]} rgb value\n         */\n        hsvToRGB: function (h, s, v) {\n          var r, g, b;\n          var i;\n          var f, p, q, t;\n          h = Math.max(0, Math.min(360, h));\n          s = Math.max(0, Math.min(100, s));\n          v = Math.max(0, Math.min(100, v));\n          s /= 100;\n          v /= 100;\n          if (s === 0) {\n            // Achromatic (grey)\n            r = g = b = v;\n            return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n          }\n          h /= 60; // sector 0 to 5\n\n          i = Math.floor(h);\n          f = h - i; // factorial part of h\n\n          p = v * (1 - s);\n          q = v * (1 - s * f);\n          t = v * (1 - s * (1 - f));\n          switch (i) {\n            case 0:\n              r = v;\n              g = t;\n              b = p;\n              break;\n            case 1:\n              r = q;\n              g = v;\n              b = p;\n              break;\n            case 2:\n              r = p;\n              g = v;\n              b = t;\n              break;\n            case 3:\n              r = p;\n              g = q;\n              b = v;\n              break;\n            case 4:\n              r = t;\n              g = p;\n              b = v;\n              break;\n            default:\n              r = v;\n              g = p;\n              b = q;\n              break;\n          }\n          return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n        }\n      };\n      module.exports = colorUtil;\n\n      /***/\n    }, /* 13 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is a function or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a function or not.\n       * If the given variable is a function, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is function?\n       * @memberof module:type\n       */\n      function isFunction(obj) {\n        return obj instanceof Function;\n      }\n      module.exports = isFunction;\n\n      /***/\n    }, /* 14 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Bind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isString = __webpack_require__(11);\n      var forEach = __webpack_require__(2);\n      var safeEvent = __webpack_require__(26);\n\n      /**\n       * Bind DOM events.\n       * @param {HTMLElement} element - element to bind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {(function|object)} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @memberof module:domEvent\n       * @example\n       * var div = document.querySelector('div');\n       * \n       * // Bind one event to an element.\n       * on(div, 'click', toggle);\n       * \n       * // Bind multiple events with a same handler to multiple elements at once.\n       * // Use event names splitted by a space.\n       * on(div, 'mouseenter mouseleave', changeColor);\n       * \n       * // Bind multiple events with different handlers to an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * on(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Set a context for handler method.\n       * var name = 'global';\n       * var repository = {name: 'CodeSnippet'};\n       * on(div, 'drag', function() {\n       *  console.log(this.name);\n       * }, repository);\n       * // Result when you drag a div: \"CodeSnippet\"\n       */\n      function on(element, types, handler, context) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            bindEvent(element, type, handler, context);\n          });\n          return;\n        }\n        forEach(types, function (func, type) {\n          bindEvent(element, type, func, handler);\n        });\n      }\n\n      /**\n       * Bind DOM events\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @private\n       */\n      function bindEvent(element, type, handler, context) {\n        /**\n           * Event handler\n           * @param {Event} e - event object\n           */\n        function eventHandler(e) {\n          handler.call(context || element, e || window.event);\n        }\n        if ('addEventListener' in element) {\n          element.addEventListener(type, eventHandler);\n        } else if ('attachEvent' in element) {\n          element.attachEvent('on' + type, eventHandler);\n        }\n        memorizeHandler(element, type, handler, eventHandler);\n      }\n\n      /**\n       * Memorize DOM event handler for unbinding.\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function that user passed at on() use\n       * @param {function} wrappedHandler - handler function that wrapped by domevent for implementing some features\n       * @private\n       */\n      function memorizeHandler(element, type, handler, wrappedHandler) {\n        var events = safeEvent(element, type);\n        var existInEvents = false;\n        forEach(events, function (obj) {\n          if (obj.handler === handler) {\n            existInEvents = true;\n            return false;\n          }\n          return true;\n        });\n        if (!existInEvents) {\n          events.push({\n            handler: handler,\n            wrappedHandler: wrappedHandler\n          });\n        }\n      }\n      module.exports = on;\n\n      /***/\n    }, /* 15 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Prevent default action\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Prevent default action\n       * @param {Event} e - event object\n       * @memberof module:domEvent\n       */\n      function preventDefault(e) {\n        if (e.preventDefault) {\n          e.preventDefault();\n          return;\n        }\n        e.returnValue = false;\n      }\n      module.exports = preventDefault;\n\n      /***/\n    }, /* 16 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Convert kebab-case\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Convert kebab-case\n       * @param {string} key - string to be converted to Kebab-case\n       * @private\n       */\n      function convertToKebabCase(key) {\n        return key.replace(/([A-Z])/g, function (match) {\n          return '-' + match.toLowerCase();\n        });\n      }\n      module.exports = convertToKebabCase;\n\n      /***/\n    }, /* 17 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Unbind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isString = __webpack_require__(11);\n      var forEach = __webpack_require__(2);\n      var safeEvent = __webpack_require__(26);\n\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {function} [handler] - handler function\n       * @memberof module:domEvent\n       * @example\n       * // Following the example of domEvent#on\n       * \n       * // Unbind one event from an element.\n       * off(div, 'click', toggle);\n       * \n       * // Unbind multiple events with a same handler from multiple elements at once.\n       * // Use event names splitted by a space.\n       * off(element, 'mouseenter mouseleave', changeColor);\n       * \n       * // Unbind multiple events with different handlers from an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * off(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Unbind events without handlers.\n       * off(div, 'drag');\n       */\n      function off(element, types, handler) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            unbindEvent(element, type, handler);\n          });\n          return;\n        }\n        forEach(types, function (func, type) {\n          unbindEvent(element, type, func);\n        });\n      }\n\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {string} type - events name\n       * @param {function} [handler] - handler function\n       * @private\n       */\n      function unbindEvent(element, type, handler) {\n        var events = safeEvent(element, type);\n        var index;\n        if (!handler) {\n          forEach(events, function (item) {\n            removeHandler(element, type, item.wrappedHandler);\n          });\n          events.splice(0, events.length);\n        } else {\n          forEach(events, function (item, idx) {\n            if (handler === item.handler) {\n              removeHandler(element, type, item.wrappedHandler);\n              index = idx;\n              return false;\n            }\n            return true;\n          });\n          events.splice(index, 1);\n        }\n      }\n\n      /**\n       * Remove an event handler\n       * @param {HTMLElement} element - An element to remove an event\n       * @param {string} type - event type\n       * @param {function} handler - event handler\n       * @private\n       */\n      function removeHandler(element, type, handler) {\n        if ('removeEventListener' in element) {\n          element.removeEventListener(type, handler);\n        } else if ('detachEvent' in element) {\n          element.detachEvent('on' + type, handler);\n        }\n      }\n      module.exports = off;\n\n      /***/\n    }, /* 18 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Provide a simple inheritance in prototype-oriented.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var createObject = __webpack_require__(50);\n\n      /**\n       * Provide a simple inheritance in prototype-oriented.\n       * Caution :\n       *  Don't overwrite the prototype of child constructor.\n       *\n       * @param {function} subType Child constructor\n       * @param {function} superType Parent constructor\n       * @memberof module:inheritance\n       * @example\n       * var inherit = require('tui-code-snippet/inheritance/inherit'); // node, commonjs\n       *\n       * // Parent constructor\n       * function Animal(leg) {\n       *     this.leg = leg;\n       * }\n       * Animal.prototype.growl = function() {\n       *     // ...\n       * };\n       *\n       * // Child constructor\n       * function Person(name) {\n       *     this.name = name;\n       * }\n       *\n       * // Inheritance\n       * inherit(Person, Animal);\n       *\n       * // After this inheritance, please use only the extending of property.\n       * // Do not overwrite prototype.\n       * Person.prototype.walk = function(direction) {\n       *     // ...\n       * };\n       */\n      function inherit(subType, superType) {\n        var prototype = createObject(superType.prototype);\n        prototype.constructor = subType;\n        subType.prototype = prototype;\n      }\n      module.exports = inherit;\n\n      /***/\n    }, /* 19 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Common collections.\n       */\n      var forEachArray = __webpack_require__(6);\n      var forEachOwnProperties = __webpack_require__(7);\n      var extend = __webpack_require__(0);\n      var isArray = __webpack_require__(1);\n      var isExisty = __webpack_require__(20);\n      var isFunction = __webpack_require__(13);\n      var isObject = __webpack_require__(21);\n      var util = __webpack_require__(4);\n      var slice = Array.prototype.slice;\n      /**\n       * Common collection.\n       *\n       * It need function for get model's unique id.\n       *\n       * if the function is not supplied then it use default function {@link Collection#getItemID}\n       * @constructor\n       * @param {function} [getItemIDFn] function for get model's id.\n       * @ignore\n       */\n\n      function Collection(getItemIDFn) {\n        /**\n         * @type {object.<string, *>}\n         */\n        this.items = {};\n        /**\n         * @type {number}\n         */\n\n        this.length = 0;\n        if (isFunction(getItemIDFn)) {\n          /**\n           * @type {function}\n           */\n          this.getItemID = getItemIDFn;\n        }\n      }\n      /**********\n       * static props\n       **********/\n\n      /**\n       * Combind supplied function filters and condition.\n       * @param {...function} filters - function filters\n       * @returns {function} combined filter\n       */\n\n      Collection.and = function (filters) {\n        var cnt;\n        filters = slice.call(arguments);\n        cnt = filters.length;\n        return function (item) {\n          var i = 0;\n          for (; i < cnt; i += 1) {\n            if (!filters[i].call(null, item)) {\n              return false;\n            }\n          }\n          return true;\n        };\n      };\n      /**\n       * Combine multiple function filters with OR clause.\n       * @param {...function} filters - function filters\n       * @returns {function} combined filter\n       */\n\n      Collection.or = function (filters) {\n        var cnt;\n        filters = slice.call(arguments);\n        cnt = filters.length;\n        return function (item) {\n          var i = 1;\n          var result = filters[0].call(null, item);\n          for (; i < cnt; i += 1) {\n            result = result || filters[i].call(null, item);\n          }\n          return result;\n        };\n      };\n      /**\n       * Merge several collections.\n       *\n       * You can\\'t merge collections different _getEventID functions. Take case of use.\n       * @param {...Collection} collections collection arguments to merge\n       * @returns {Collection} merged collection.\n       */\n\n      Collection.merge = function (firstCollection) {\n        var newItems = {};\n        var merged = new Collection(firstCollection.getItemID);\n        forEachArray(arguments, function (col) {\n          extend(newItems, col.items);\n        });\n        merged.items = newItems;\n        merged.length = util.getLength(merged.items);\n        return merged;\n      };\n      /**********\n       * prototype props\n       **********/\n\n      /**\n       * get model's unique id.\n       * @param {object} item model instance.\n       * @returns {number} model unique id.\n       */\n\n      Collection.prototype.getItemID = function (item) {\n        return item._id + '';\n      };\n      /**\n       * add models.\n       * @param {...*} item models to add this collection.\n       */\n\n      Collection.prototype.add = function (item) {\n        var id, ownItems;\n        if (arguments.length > 1) {\n          forEachArray(slice.call(arguments), function (o) {\n            this.add(o);\n          }, this);\n          return;\n        }\n        id = this.getItemID(item);\n        ownItems = this.items;\n        if (!ownItems[id]) {\n          this.length += 1;\n        }\n        ownItems[id] = item;\n      };\n      /**\n       * remove models.\n       * @param {...(object|string|number)} id model instance or unique id to delete.\n       * @returns {array} deleted model list.\n       */\n\n      Collection.prototype.remove = function (id) {\n        var removed = [];\n        var ownItems, itemToRemove;\n        if (!this.length) {\n          return removed;\n        }\n        if (arguments.length > 1) {\n          removed = util.map(slice.call(arguments), function (id) {\n            return this.remove(id);\n          }, this);\n          return removed;\n        }\n        ownItems = this.items;\n        if (isObject(id)) {\n          id = this.getItemID(id);\n        }\n        if (!ownItems[id]) {\n          return removed;\n        }\n        this.length -= 1;\n        itemToRemove = ownItems[id];\n        delete ownItems[id];\n        return itemToRemove;\n      };\n      /**\n       * remove all models in collection.\n       */\n\n      Collection.prototype.clear = function () {\n        this.items = {};\n        this.length = 0;\n      };\n      /**\n       * check collection has specific model.\n       * @param {(object|string|number|function)} id model instance or id or filter function to check\n       * @returns {boolean} is has model?\n       */\n\n      Collection.prototype.has = function (id) {\n        var isFilter, has;\n        if (!this.length) {\n          return false;\n        }\n        isFilter = isFunction(id);\n        has = false;\n        if (isFilter) {\n          this.each(function (item) {\n            if (id(item) === true) {\n              has = true;\n              return false;\n            }\n            return true;\n          });\n        } else {\n          id = isObject(id) ? this.getItemID(id) : id;\n          has = isExisty(this.items[id]);\n        }\n        return has;\n      };\n      /**\n       * invoke callback when model exist in collection.\n       * @param {(string|number)} id model unique id.\n       * @param {function} fn the callback.\n       * @param {*} [context] callback context.\n       */\n\n      Collection.prototype.doWhenHas = function (id, fn, context) {\n        var item = this.items[id];\n        if (!isExisty(item)) {\n          return;\n        }\n        fn.call(context || this, item);\n      };\n      /**\n       * Search model. and return new collection.\n       * @param {function} filter filter function.\n       * @returns {Collection} new collection with filtered models.\n       * @example\n       * collection.find(function(item) {\n       *     return item.edited === true;\n       * });\n       *\n       * function filter1(item) {\n       *     return item.edited === false;\n       * }\n       *\n       * function filter2(item) {\n       *     return item.disabled === false;\n       * }\n       *\n       * collection.find(Collection.and(filter1, filter2));\n       *\n       * collection.find(Collection.or(filter1, filter2));\n       */\n\n      Collection.prototype.find = function (filter) {\n        var result = new Collection();\n        if (this.hasOwnProperty('getItemID')) {\n          result.getItemID = this.getItemID;\n        }\n        this.each(function (item) {\n          if (filter(item) === true) {\n            result.add(item);\n          }\n        });\n        return result;\n      };\n      /**\n       * Group element by specific key values.\n       *\n       * if key parameter is function then invoke it and use returned value.\n       * @param {(string|number|function|array)} key key property or getter function. if string[] supplied, create each collection before grouping.\n       * @param {function} [groupFunc] - function that return each group's key\n       * @returns {object.<string, Collection>} grouped object\n       * @example\n       *\n       * // pass `string`, `number`, `boolean` type value then group by property value.\n       * collection.groupBy('gender');    // group by 'gender' property value.\n       * collection.groupBy(50);          // group by '50' property value.\n       *\n       * // pass `function` then group by return value. each invocation `function` is called with `(item)`.\n       * collection.groupBy(function(item) {\n       *     if (item.score > 60) {\n       *         return 'pass';\n       *     }\n       *     return 'fail';\n       * });\n       *\n       * // pass `array` with first arguments then create each collection before grouping.\n       * collection.groupBy(['go', 'ruby', 'javascript']);\n       * // result: { 'go': empty Collection, 'ruby': empty Collection, 'javascript': empty Collection }\n       *\n       * // can pass `function` with `array` then group each elements.\n       * collection.groupBy(['go', 'ruby', 'javascript'], function(item) {\n       *     if (item.isFast) {\n       *         return 'go';\n       *     }\n       *\n       *     return item.name;\n       * });\n       */\n\n      Collection.prototype.groupBy = function (key, groupFunc) {\n        var result = {};\n        var keyIsFunc = isFunction(key);\n        var getItemIDFn = this.getItemID;\n        var collection, baseValue;\n        if (isArray(key)) {\n          forEachArray(key, function (k) {\n            result[k + ''] = new Collection(getItemIDFn);\n          });\n          if (!groupFunc) {\n            return result;\n          }\n          key = groupFunc;\n          keyIsFunc = true;\n        }\n        this.each(function (item) {\n          if (keyIsFunc) {\n            baseValue = key(item);\n          } else {\n            baseValue = item[key];\n            if (isFunction(baseValue)) {\n              baseValue = baseValue.apply(item);\n            }\n          }\n          collection = result[baseValue];\n          if (!collection) {\n            collection = result[baseValue] = new Collection(getItemIDFn);\n          }\n          collection.add(item);\n        });\n        return result;\n      };\n      /**\n       * Return single item in collection.\n       *\n       * Returned item is inserted in this collection firstly.\n       * @returns {object} item.\n       */\n\n      Collection.prototype.single = function () {\n        var result;\n        this.each(function (item) {\n          result = item;\n          return false;\n        }, this);\n        return result;\n      };\n      /**\n       * sort a basis of supplied compare function.\n       * @param {function} compareFunction compareFunction\n       * @returns {array} sorted array.\n       */\n\n      Collection.prototype.sort = function (compareFunction) {\n        var arr = [];\n        this.each(function (item) {\n          arr.push(item);\n        });\n        if (isFunction(compareFunction)) {\n          arr = arr.sort(compareFunction);\n        }\n        return arr;\n      };\n      /**\n       * iterate each model element.\n       *\n       * when iteratee return false then break the loop.\n       * @param {function} iteratee iteratee(item, index, items)\n       * @param {*} [context] context\n       */\n\n      Collection.prototype.each = function (iteratee, context) {\n        forEachOwnProperties(this.items, iteratee, context || this);\n      };\n      /**\n       * return new array with collection items.\n       * @returns {array} new array.\n       */\n\n      Collection.prototype.toArray = function () {\n        if (!this.length) {\n          return [];\n        }\n        return util.map(this.items, function (item) {\n          return item;\n        });\n      };\n      module.exports = Collection;\n\n      /***/\n    }, /* 20 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is existing or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isUndefined = __webpack_require__(3);\n      var isNull = __webpack_require__(36);\n\n      /**\n       * Check whether the given variable is existing or not.\n       * If the given variable is not null and not undefined, returns true.\n       * @param {*} param - Target for checking\n       * @returns {boolean} Is existy?\n       * @memberof module:type\n       * @example\n       * var isExisty = require('tui-code-snippet/type/isExisty'); // node, commonjs\n       *\n       * isExisty(''); //true\n       * isExisty(0); //true\n       * isExisty([]); //true\n       * isExisty({}); //true\n       * isExisty(null); //false\n       * isExisty(undefined); //false\n      */\n      function isExisty(param) {\n        return !isUndefined(param) && !isNull(param);\n      }\n      module.exports = isExisty;\n\n      /***/\n    }, /* 21 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is an object or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an object or not.\n       * If the given variable is an object, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is object?\n       * @memberof module:type\n       */\n      function isObject(obj) {\n        return obj === Object(obj);\n      }\n      module.exports = isObject;\n\n      /***/\n    }, /* 22 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview This module detects the kind of well-known browser and version.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Browser module\n       * @module browser\n       */\n\n      /**\n       * This object has an information that indicate the kind of browser. It can detect IE8 ~ IE11, Chrome, Firefox, Safari, and Edge.\n       * @memberof module:browser\n       * @example\n       * var browser = require('tui-code-snippet/browser/browser'); // node, commonjs\n       *\n       * browser.chrome === true; // chrome\n       * browser.firefox === true; // firefox\n       * browser.safari === true; // safari\n       * browser.msie === true; // IE\n       * browser.edge === true; // edge\n       * browser.others === true; // other browser\n       * browser.version; // browser version\n       */\n      var browser = {\n        chrome: false,\n        firefox: false,\n        safari: false,\n        msie: false,\n        edge: false,\n        others: false,\n        version: 0\n      };\n      if (typeof window !== 'undefined' && window.navigator) {\n        detectBrowser();\n      }\n\n      /**\n       * Detect the browser.\n       * @private\n       */\n      function detectBrowser() {\n        var nav = window.navigator;\n        var appName = nav.appName.replace(/\\s/g, '_');\n        var userAgent = nav.userAgent;\n        var rIE = /MSIE\\s([0-9]+[.0-9]*)/;\n        var rIE11 = /Trident.*rv:11\\./;\n        var rEdge = /Edge\\/(\\d+)\\./;\n        var versionRegex = {\n          firefox: /Firefox\\/(\\d+)\\./,\n          chrome: /Chrome\\/(\\d+)\\./,\n          safari: /Version\\/([\\d.]+).*Safari\\/(\\d+)/\n        };\n        var key, tmp;\n        var detector = {\n          Microsoft_Internet_Explorer: function () {\n            // eslint-disable-line camelcase\n            var detectedVersion = userAgent.match(rIE);\n            if (detectedVersion) {\n              // ie8 ~ ie10\n              browser.msie = true;\n              browser.version = parseFloat(detectedVersion[1]);\n            } else {\n              // no version information\n              browser.others = true;\n            }\n          },\n          Netscape: function () {\n            // eslint-disable-line complexity\n            var detected = false;\n            if (rIE11.exec(userAgent)) {\n              browser.msie = true;\n              browser.version = 11;\n              detected = true;\n            } else if (rEdge.exec(userAgent)) {\n              browser.edge = true;\n              browser.version = userAgent.match(rEdge)[1];\n              detected = true;\n            } else {\n              for (key in versionRegex) {\n                if (versionRegex.hasOwnProperty(key)) {\n                  tmp = userAgent.match(versionRegex[key]);\n                  if (tmp && tmp.length > 1) {\n                    // eslint-disable-line max-depth\n                    browser[key] = detected = true;\n                    browser.version = parseFloat(tmp[1] || 0);\n                    break;\n                  }\n                }\n              }\n            }\n            if (!detected) {\n              browser.others = true;\n            }\n          }\n        };\n        var fn = detector[appName];\n        if (fn) {\n          detector[appName]();\n        }\n      }\n      module.exports = browser;\n\n      /***/\n    }, /* 23 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Get HTML element's design classes.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isUndefined = __webpack_require__(3);\n\n      /**\n       * Get HTML element's design classes.\n       * @param {(HTMLElement|SVGElement)} element target element\n       * @returns {string} element css class name\n       * @memberof module:domUtil\n       */\n      function getClass(element) {\n        if (!element || !element.className) {\n          return '';\n        }\n        if (isUndefined(element.className.baseVal)) {\n          return element.className;\n        }\n        return element.className.baseVal;\n      }\n      module.exports = getClass;\n\n      /***/\n    }, /* 24 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /* WEBPACK VAR INJECTION */\n      (function (global) {\n        /**\n        * @fileoverview General drag handler\n        */\n\n        var CustomEvents = __webpack_require__(10);\n        var disableTextSelection = __webpack_require__(42);\n        var enableTextSelection = __webpack_require__(44);\n        var getMouseButton = __webpack_require__(47);\n        var getTarget = __webpack_require__(28);\n        var off = __webpack_require__(17);\n        var on = __webpack_require__(14);\n        var preventDefault = __webpack_require__(15);\n        var extend = __webpack_require__(0);\n        /**\n         * @constructor\n         * @mixes CustomEvents\n         * @param {object} options - options for drag handler\n         * @param {number} [options.distance=10] - distance in pixels after mouse must move before dragging should start\n         * @param {HTMLElement} container - container element to bind drag events\n         * @ignore\n         */\n\n        function Drag(options, container) {\n          on(container, 'mousedown', this._onMouseDown, this);\n          this.options = extend({\n            distance: 10\n          }, options);\n          /**\n           * @type {HTMLElement}\n           */\n\n          this.container = container;\n          /**\n           * @type {boolean}\n           */\n\n          this._isMoved = false;\n          /**\n           * dragging distance in pixel between mousedown and firing dragStart events\n           * @type {number}\n           */\n\n          this._distance = 0;\n          /**\n           * @type {boolean}\n           */\n\n          this._dragStartFired = false;\n          /**\n           * @type {object}\n           */\n\n          this._dragStartEventData = null;\n        }\n        /**\n         * Destroy method.\n         */\n\n        Drag.prototype.destroy = function () {\n          off(this.container, 'mousedown', this._onMouseDown);\n          this.options = this.container = this._isMoved = this._distance = this._dragStartFired = this._dragStartEventData = null;\n        };\n        /**\n         * Toggle events for mouse dragging.\n         * @param {boolean} toBind - bind events related with dragging when supplied \"true\"\n         */\n\n        Drag.prototype._toggleDragEvent = function (toBind) {\n          var container = this.container;\n          if (toBind) {\n            disableTextSelection(container);\n            on(window, 'dragstart', preventDefault);\n            on(global.document, {\n              mousemove: this._onMouseMove,\n              mouseup: this._onMouseUp\n            }, this);\n          } else {\n            enableTextSelection(container);\n            off(window, 'dragstart', preventDefault);\n            off(global.document, {\n              mousemove: this._onMouseMove,\n              mouseup: this._onMouseUp\n            });\n          }\n        };\n        /**\n         * Normalize mouse event object.\n         * @param {MouseEvent} mouseEvent - mouse event object.\n         * @returns {object} normalized mouse event data.\n         */\n\n        Drag.prototype._getEventData = function (mouseEvent) {\n          return {\n            target: getTarget(mouseEvent),\n            originEvent: mouseEvent\n          };\n        };\n        /**\n         * MouseDown DOM event handler.\n         * @param {MouseEvent} mouseDownEvent MouseDown event object.\n         */\n\n        Drag.prototype._onMouseDown = function (mouseDownEvent) {\n          // only primary button can start drag.\n          if (getMouseButton(mouseDownEvent) !== 0) {\n            return;\n          }\n          this._distance = 0;\n          this._dragStartFired = false;\n          this._dragStartEventData = this._getEventData(mouseDownEvent);\n          this._toggleDragEvent(true);\n        };\n        /**\n         * MouseMove DOM event handler.\n         * @emits Drag#drag\n         * @emits Drag#dragStart\n         * @param {MouseEvent} mouseMoveEvent MouseMove event object.\n         */\n\n        Drag.prototype._onMouseMove = function (mouseMoveEvent) {\n          var distance = this.options.distance; // prevent automatic scrolling.\n\n          preventDefault(mouseMoveEvent);\n          this._isMoved = true;\n          if (this._distance < distance) {\n            this._distance += 1;\n            return;\n          }\n          if (!this._dragStartFired) {\n            this._dragStartFired = true;\n            /**\n             * Drag starts events. cancelable.\n             * @event Drag#dragStart\n             * @type {object}\n             * @property {HTMLElement} target - target element in this event.\n             * @property {MouseEvent} originEvent - original mouse event object.\n             */\n\n            if (!this.invoke('dragStart', this._dragStartEventData)) {\n              this._toggleDragEvent(false);\n              return;\n            }\n          }\n          /**\n           * Events while dragging.\n           * @event Drag#drag\n           * @type {object}\n           * @property {HTMLElement} target - target element in this event.\n           * @property {MouseEvent} originEvent - original mouse event object.\n           */\n\n          this.fire('drag', this._getEventData(mouseMoveEvent));\n        };\n        /**\n         * MouseUp DOM event handler.\n         * @param {MouseEvent} mouseUpEvent MouseUp event object.\n         * @emits Drag#dragEnd\n         * @emits Drag#click\n         */\n\n        Drag.prototype._onMouseUp = function (mouseUpEvent) {\n          this._toggleDragEvent(false); // emit \"click\" event when not emitted drag event between mousedown and mouseup.\n\n          if (this._isMoved) {\n            this._isMoved = false;\n            /**\n             * Drag end events.\n             * @event Drag#dragEnd\n             * @type {MouseEvent}\n             * @property {HTMLElement} target - target element in this event.\n             * @property {MouseEvent} originEvent - original mouse event object.\n             */\n\n            this.fire('dragEnd', this._getEventData(mouseUpEvent));\n            return;\n          }\n          /**\n           * Click events.\n           * @event Drag#click\n           * @type {MouseEvent}\n           * @property {HTMLElement} target - target element in this event.\n           * @property {MouseEvent} originEvent - original mouse event object.\n           */\n\n          this.fire('click', this._getEventData(mouseUpEvent));\n        };\n        CustomEvents.mixin(Drag);\n        module.exports = Drag;\n        /* WEBPACK VAR INJECTION */\n      }).call(this, __webpack_require__(25));\n\n      /***/\n    }, /* 25 */\n    /***/function (module, exports) {\n      var g;\n\n      // This works in non-strict mode\n      g = function () {\n        return this;\n      }();\n      try {\n        // This works if eval is allowed (see CSP)\n        g = g || new Function(\"return this\")();\n      } catch (e) {\n        // This works if the window reference is available\n        if (typeof window === \"object\") g = window;\n      }\n\n      // g can still be undefined, but nothing to do about it...\n      // We return undefined, instead of nothing here, so it's\n      // easier to handle this case. if(!global) { ...}\n\n      module.exports = g;\n\n      /***/\n    }, /* 26 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Get event collection for specific HTML element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var EVENT_KEY = '_feEventKey';\n\n      /**\n       * Get event collection for specific HTML element\n       * @param {HTMLElement} element - HTML element\n       * @param {string} type - event type\n       * @returns {array}\n       * @private\n       */\n      function safeEvent(element, type) {\n        var events = element[EVENT_KEY];\n        var handlers;\n        if (!events) {\n          events = element[EVENT_KEY] = {};\n        }\n        handlers = events[type];\n        if (!handlers) {\n          handlers = events[type] = [];\n        }\n        return handlers;\n      }\n      module.exports = safeEvent;\n\n      /***/\n    }, /* 27 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check specific CSS style is available.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check specific CSS style is available.\n       * @param {array} props property name to testing\n       * @returns {(string|boolean)} return true when property is available\n       * @private\n       */\n      function testCSSProp(props) {\n        var style = document.documentElement.style;\n        var i, len;\n        for (i = 0, len = props.length; i < len; i += 1) {\n          if (props[i] in style) {\n            return props[i];\n          }\n        }\n        return false;\n      }\n      module.exports = testCSSProp;\n\n      /***/\n    }, /* 28 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Get a target element from an event object.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Get a target element from an event object.\n       * @param {Event} e - event object\n       * @returns {HTMLElement} - target element\n       * @memberof module:domEvent\n       */\n      function getTarget(e) {\n        return e.target || e.srcElement;\n      }\n      module.exports = getTarget;\n\n      /***/\n    }, /* 29 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Color palette view\n       */\n      var CustomEvents = __webpack_require__(10);\n      var getTarget = __webpack_require__(28);\n      var off = __webpack_require__(17);\n      var on = __webpack_require__(14);\n      var hasClass = __webpack_require__(30);\n      var extend = __webpack_require__(0);\n      var inherit = __webpack_require__(18);\n      var domUtil = __webpack_require__(9);\n      var colorUtil = __webpack_require__(12);\n      var View = __webpack_require__(8);\n      var tmpl = __webpack_require__(51);\n      /**\n       * @constructor\n       * @extends {View}\n       * @mixes CustomEvents\n       * @param {object} options - options for color palette view\n       * @param {string[]} options.preset - color list\n       * @param {HTMLDivElement} container - container element\n       * @ignore\n       */\n\n      function Palette(options, container) {\n        /**\n         * option object\n         * @type {object}\n         */\n        this.options = extend({\n          cssPrefix: 'tui-colorpicker-',\n          preset: ['#181818', '#282828', '#383838', '#585858', '#B8B8B8', '#D8D8D8', '#E8E8E8', '#F8F8F8', '#AB4642', '#DC9656', '#F7CA88', '#A1B56C', '#86C1B9', '#7CAFC2', '#BA8BAF', '#A16946'],\n          detailTxt: 'Detail'\n        }, options);\n        container = domUtil.appendHTMLElement('div', container, this.options.cssPrefix + 'palette-container');\n        View.call(this, options, container);\n      }\n      inherit(Palette, View);\n      /**\n       * Mouse click event handler\n       * @fires Palette#_selectColor\n       * @fires Palette#_toggleSlider\n       * @param {MouseEvent} clickEvent - mouse event object\n       */\n\n      Palette.prototype._onClick = function (clickEvent) {\n        var options = this.options;\n        var target = getTarget(clickEvent);\n        var eventData = {};\n        if (hasClass(target, options.cssPrefix + 'palette-button')) {\n          eventData.color = target.value;\n          /**\n           * @event Palette#_selectColor\n           * @type {object}\n           * @property {string} color - selected color value\n           */\n\n          this.fire('_selectColor', eventData);\n          return;\n        }\n        if (hasClass(target, options.cssPrefix + 'palette-toggle-slider')) {\n          /**\n           * @event Palette#_toggleSlider\n           */\n          this.fire('_toggleSlider');\n        }\n      };\n      /**\n       * Textbox change event handler\n       * @fires Palette#_selectColor\n       * @param {Event} changeEvent - change event object\n       */\n\n      Palette.prototype._onChange = function (changeEvent) {\n        var options = this.options;\n        var target = getTarget(changeEvent);\n        var eventData = {};\n        if (hasClass(target, options.cssPrefix + 'palette-hex')) {\n          eventData.color = target.value;\n          /**\n           * @event Palette#_selectColor\n           * @type {object}\n           * @property {string} color - selected color value\n           */\n\n          this.fire('_selectColor', eventData);\n        }\n      };\n      /**\n       * Invoke before destory\n       * @override\n       */\n\n      Palette.prototype._beforeDestroy = function () {\n        this._toggleEvent(false);\n      };\n      /**\n       * Toggle view DOM events\n       * @param {boolean} [toBind=false] - true to bind event.\n       */\n\n      Palette.prototype._toggleEvent = function (toBind) {\n        var options = this.options;\n        var container = this.container;\n        var handleEvent = toBind ? on : off;\n        var hexTextBox;\n        handleEvent(container, 'click', this._onClick, this);\n        hexTextBox = container.querySelector('.' + options.cssPrefix + 'palette-hex', container);\n        if (hexTextBox) {\n          handleEvent(hexTextBox, 'change', this._onChange, this);\n        }\n      };\n      /**\n       * Render palette\n       * @override\n       */\n\n      Palette.prototype.render = function (color) {\n        var options = this.options;\n        var html = '';\n        this._toggleEvent(false);\n        html = tmpl({\n          cssPrefix: options.cssPrefix,\n          preset: options.preset,\n          detailTxt: options.detailTxt,\n          color: color,\n          isValidRGB: colorUtil.isValidRGB,\n          getItemClass: function (itemColor) {\n            return !itemColor ? ' ' + options.cssPrefix + 'color-transparent' : '';\n          },\n          isSelected: function (itemColor) {\n            return itemColor === color ? ' ' + options.cssPrefix + 'selected' : '';\n          }\n        });\n        this.container.innerHTML = html;\n        this._toggleEvent(true);\n      };\n      CustomEvents.mixin(Palette);\n      module.exports = Palette;\n\n      /***/\n    }, /* 30 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check element has specific css class\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var inArray = __webpack_require__(5);\n      var getClass = __webpack_require__(23);\n\n      /**\n       * Check element has specific css class\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {string} cssClass - css class\n       * @returns {boolean}\n       * @memberof module:domUtil\n       */\n      function hasClass(element, cssClass) {\n        var origin;\n        if (element.classList) {\n          return element.classList.contains(cssClass);\n        }\n        origin = getClass(element).split(/\\s+/);\n        return inArray(cssClass, origin) > -1;\n      }\n      module.exports = hasClass;\n\n      /***/\n    }, /* 31 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Slider view\n       */\n      var CustomEvents = __webpack_require__(10);\n      var getMousePosition = __webpack_require__(53);\n      var closest = __webpack_require__(54);\n      var hasClass = __webpack_require__(30);\n      var extend = __webpack_require__(0);\n      var inherit = __webpack_require__(18);\n      var domUtil = __webpack_require__(9);\n      var svgvml = __webpack_require__(32);\n      var colorUtil = __webpack_require__(12);\n      var View = __webpack_require__(8);\n      var Drag = __webpack_require__(24);\n      var tmpl = __webpack_require__(57); // Limitation position of point element inside of colorslider and hue bar\n      // Minimum value can to be negative because that using color point of handle element is center point. not left, top point.\n\n      var DEFAULT_COLORSLIDER_POS_LIMIT_MIN = -7;\n      var DEFAULT_COLORSLIDER_POS_LIMIT_MAX = 112;\n      var DEFAULT_HUEBAR_POS_LIMIT_MIN = -3;\n      var DEFAULT_HUEBAR_POS_LIMIT_MAX = 115;\n      var HUE_WHEEL_MAX = 359.99;\n      /**\n       * @constructor\n       * @extends {View}\n       * @mixes CustomEvents\n       * @param {object} options - options for view\n       *  @param {string} options.cssPrefix - design css prefix\n       * @param {HTMLElement} container - container element\n       * @ignore\n       */\n\n      function Slider(options, container) {\n        container = domUtil.appendHTMLElement('div', container, options.cssPrefix + 'slider-container');\n        container.style.display = 'none';\n        View.call(this, options, container);\n        /**\n         * @type {object}\n         */\n\n        this.options = extend({\n          color: '#f8f8f8',\n          cssPrefix: 'tui-colorpicker-'\n        }, options);\n        /**\n         * Cache immutable data in click, drag events.\n         *\n         * (i.e. is event related with colorslider? or huebar?)\n         * @type {object}\n         * @property {boolean} isColorSlider\n         * @property {number[]} containerSize\n         */\n\n        this._dragDataCache = {};\n        /**\n         * Color slider handle element\n         * @type {SVG|VML}\n         */\n\n        this.sliderHandleElement = null;\n        /**\n         * hue bar handle element\n         * @type {SVG|VML}\n         */\n\n        this.huebarHandleElement = null;\n        /**\n         * Element that render base color in colorslider part\n         * @type {SVG|VML}\n         */\n\n        this.baseColorElement = null;\n        /**\n         * @type {Drag}\n         */\n\n        this.drag = new Drag({\n          distance: 0\n        }, container);\n        this.colorSliderPosLimitRange = [DEFAULT_COLORSLIDER_POS_LIMIT_MIN, DEFAULT_COLORSLIDER_POS_LIMIT_MAX];\n        this.huebarPosLimitRange = [DEFAULT_HUEBAR_POS_LIMIT_MIN, DEFAULT_HUEBAR_POS_LIMIT_MAX]; // bind drag events\n\n        this.drag.on({\n          dragStart: this._onDragStart,\n          drag: this._onDrag,\n          dragEnd: this._onDragEnd,\n          click: this._onClick\n        }, this);\n      }\n      inherit(Slider, View);\n      /**\n       * @override\n       */\n\n      Slider.prototype._beforeDestroy = function () {\n        this.drag.off();\n        this.drag = this.options = this._dragDataCache = this.sliderHandleElement = this.huebarHandleElement = this.baseColorElement = null;\n      };\n      /**\n       * Toggle slider view\n       * @param {boolean} onOff - set true then reveal slider view\n       */\n\n      Slider.prototype.toggle = function (onOff) {\n        this.container.style.display = !!onOff ? 'block' : 'none';\n      };\n      /**\n       * Get slider display status\n       * @returns {boolean} return true when slider is visible\n       */\n\n      Slider.prototype.isVisible = function () {\n        return this.container.style.display === 'block';\n      };\n      /**\n       * Render slider view\n       * @override\n       * @param {string} colorStr - hex string color from parent view (Layout)\n       */\n\n      Slider.prototype.render = function (colorStr) {\n        var container = this.container;\n        var options = this.options;\n        var html = tmpl.layout;\n        var rgb, hsv;\n        if (!colorUtil.isValidRGB(colorStr)) {\n          return;\n        }\n        html = html.replace(/{{slider}}/, tmpl.slider);\n        html = html.replace(/{{huebar}}/, tmpl.huebar);\n        html = html.replace(/{{cssPrefix}}/g, options.cssPrefix);\n        html = html.replace(/{{id}}/g, options.id);\n        this.container.innerHTML = html;\n        this.sliderSvgElement = container.querySelector('.' + options.cssPrefix + 'svg-slider');\n        this.huebarSvgElement = container.querySelector('.' + options.cssPrefix + 'svg-huebar');\n        this.sliderHandleElement = container.querySelector('.' + options.cssPrefix + 'slider-handle');\n        this.huebarHandleElement = container.querySelector('.' + options.cssPrefix + 'huebar-handle');\n        this.baseColorElement = container.querySelector('.' + options.cssPrefix + 'slider-basecolor');\n        rgb = colorUtil.hexToRGB(colorStr);\n        hsv = colorUtil.rgbToHSV.apply(null, rgb);\n        this.moveHue(hsv[0], true);\n        this.moveSaturationAndValue(hsv[1], hsv[2], true);\n      };\n      Slider.prototype._setColorSliderPosMax = function () {\n        var sliderRects = this.sliderSvgElement.getClientRects()[0];\n        if (sliderRects) {\n          this.colorSliderPosLimitRange[1] = sliderRects.height - 10;\n        }\n      };\n      /**\n       * Move colorslider by newLeft(X), newTop(Y) value\n       * @private\n       * @param {number} newLeft - left pixel value to move handle\n       * @param {number} newTop - top pixel value to move handle\n       * @param {boolean} [silent=false] - set true then not fire custom event\n       */\n\n      Slider.prototype._moveColorSliderHandle = function (newLeft, newTop, silent) {\n        var handle = this.sliderHandleElement;\n        var handleColor; // Check position limitation.\n\n        newTop = Math.max(this.colorSliderPosLimitRange[0], newTop);\n        newTop = Math.min(this.colorSliderPosLimitRange[1], newTop);\n        newLeft = Math.max(this.colorSliderPosLimitRange[0], newLeft);\n        newLeft = Math.min(this.colorSliderPosLimitRange[1], newLeft);\n        svgvml.setTranslateXY(handle, newLeft, newTop);\n        handleColor = newTop > 50 ? 'white' : 'black';\n        svgvml.setStrokeColor(handle, handleColor);\n        if (!silent) {\n          this.fire('_selectColor', {\n            color: colorUtil.rgbToHEX.apply(null, this.getRGB())\n          });\n        }\n      };\n      /**\n       * Move colorslider by supplied saturation and values.\n       *\n       * The movement of color slider handle follow HSV cylinder model. {@link https://en.wikipedia.org/wiki/HSL_and_HSV}\n       * @param {number} saturation - the percent of saturation (0% ~ 100%)\n       * @param {number} value - the percent of saturation (0% ~ 100%)\n       * @param {boolean} [silent=false] - set true then not fire custom event\n       */\n\n      Slider.prototype.moveSaturationAndValue = function (saturation, value, silent) {\n        var absMin, maxValue, newLeft, newTop;\n        saturation = saturation || 0;\n        value = value || 0;\n        absMin = Math.abs(this.colorSliderPosLimitRange[0]);\n        maxValue = this.colorSliderPosLimitRange[1]; // subtract absMin value because current color position is not left, top of handle element.\n        // The saturation. from left 0 to right 100\n\n        newLeft = saturation * maxValue / 100 - absMin; // The Value. from top 100 to bottom 0. that why newTop subtract by maxValue.\n\n        newTop = maxValue - value * maxValue / 100 - absMin;\n        this._moveColorSliderHandle(newLeft, newTop, silent);\n      };\n      /**\n       * Move color slider handle to supplied position\n       *\n       * The number of X, Y must be related value from color slider container\n       * @private\n       * @param {number} x - the pixel value to move handle\n       * @param {number} y - the pixel value to move handle\n       */\n\n      Slider.prototype._moveColorSliderByPosition = function (x, y) {\n        var offset = this.colorSliderPosLimitRange[0];\n        this._moveColorSliderHandle(x + offset, y + offset);\n      };\n      /**\n       * Get saturation and value value.\n       * @returns {number[]} saturation and value\n       */\n\n      Slider.prototype.getSaturationAndValue = function () {\n        var absMin = Math.abs(this.colorSliderPosLimitRange[0]);\n        var maxValue = absMin + this.colorSliderPosLimitRange[1];\n        var position = svgvml.getTranslateXY(this.sliderHandleElement);\n        var saturation, value;\n        saturation = (position[1] + absMin) / maxValue * 100; // The value of HSV color model is inverted. top 100 ~ bottom 0. so subtract by 100\n\n        value = 100 - (position[0] + absMin) / maxValue * 100;\n        return [saturation, value];\n      };\n      Slider.prototype._setHueBarPosMax = function () {\n        var huebarRects = this.huebarSvgElement.getClientRects()[0];\n        if (huebarRects) {\n          this.huebarPosLimitRange[1] = huebarRects.height - 7;\n        }\n      };\n      /**\n       * Move hue handle supplied pixel value\n       * @private\n       * @param {number} newTop - pixel to move hue handle\n       * @param {boolean} [silent=false] - set true then not fire custom event\n       */\n\n      Slider.prototype._moveHueHandle = function (newTop, silent) {\n        var hueHandleElement = this.huebarHandleElement;\n        var baseColorElement = this.baseColorElement;\n        var newGradientColor, hexStr;\n        newTop = Math.max(this.huebarPosLimitRange[0], newTop);\n        newTop = Math.min(this.huebarPosLimitRange[1], newTop);\n        svgvml.setTranslateY(hueHandleElement, newTop);\n        newGradientColor = colorUtil.hsvToRGB(this.getHue(), 100, 100);\n        hexStr = colorUtil.rgbToHEX.apply(null, newGradientColor);\n        svgvml.setGradientColorStop(baseColorElement, hexStr);\n        if (!silent) {\n          this.fire('_selectColor', {\n            color: colorUtil.rgbToHEX.apply(null, this.getRGB())\n          });\n        }\n      };\n      /**\n       * Move hue bar handle by supplied degree\n       * @param {number} degree - (0 ~ 359.9 degree)\n       * @param {boolean} [silent=false] - set true then not fire custom event\n       */\n\n      Slider.prototype.moveHue = function (degree, silent) {\n        var newTop = 0;\n        var absMin, maxValue;\n        absMin = Math.abs(this.huebarPosLimitRange[0]);\n        maxValue = absMin + this.huebarPosLimitRange[1];\n        degree = degree || 0;\n        newTop = maxValue * degree / HUE_WHEEL_MAX - absMin;\n        this._moveHueHandle(newTop, silent);\n      };\n      /**\n       * Move hue bar handle by supplied percent\n       * @private\n       * @param {number} y - pixel value to move hue handle\n       */\n\n      Slider.prototype._moveHueByPosition = function (y) {\n        var offset = this.huebarPosLimitRange[0];\n        this._moveHueHandle(y + offset);\n      };\n      /**\n       * Get huebar handle position by color degree\n       * @returns {number} degree (0 ~ 359.9 degree)\n       */\n\n      Slider.prototype.getHue = function () {\n        var handle = this.huebarHandleElement;\n        var position = svgvml.getTranslateXY(handle);\n        var absMin, maxValue;\n        absMin = Math.abs(this.huebarPosLimitRange[0]);\n        maxValue = absMin + this.huebarPosLimitRange[1]; // maxValue : 359.99 = pos.y : x\n\n        return (position[0] + absMin) * HUE_WHEEL_MAX / maxValue;\n      };\n      /**\n       * Get HSV value from slider\n       * @returns {number[]} hsv values\n       */\n\n      Slider.prototype.getHSV = function () {\n        var sv = this.getSaturationAndValue();\n        var h = this.getHue();\n        return [h].concat(sv);\n      };\n      /**\n       * Get RGB value from slider\n       * @returns {number[]} RGB value\n       */\n\n      Slider.prototype.getRGB = function () {\n        return colorUtil.hsvToRGB.apply(null, this.getHSV());\n      };\n      /**********\n       * Drag event handler\n       **********/\n\n      /**\n       * Cache immutable data when dragging or click view\n       * @param {object} event - Click, DragStart event.\n       * @returns {object} cached data.\n       */\n\n      Slider.prototype._prepareColorSliderForMouseEvent = function (event) {\n        var options = this.options;\n        var sliderPart = closest(event.target, '.' + options.cssPrefix + 'slider-part');\n        var cache;\n        cache = this._dragDataCache = {\n          isColorSlider: hasClass(sliderPart, options.cssPrefix + 'slider-left'),\n          parentElement: sliderPart\n        };\n        return cache;\n      };\n      /**\n       * Click event handler\n       * @param {object} clickEvent - Click event from Drag module\n       */\n\n      Slider.prototype._onClick = function (clickEvent) {\n        var cache = this._prepareColorSliderForMouseEvent(clickEvent);\n        var mousePos = getMousePosition(clickEvent.originEvent, cache.parentElement);\n        if (cache.isColorSlider) {\n          this._moveColorSliderByPosition(mousePos[0], mousePos[1]);\n        } else {\n          this._moveHueByPosition(mousePos[1]);\n        }\n        this._dragDataCache = null;\n      };\n      /**\n       * DragStart event handler\n       * @param {object} dragStartEvent - dragStart event data from Drag#dragStart\n       */\n\n      Slider.prototype._onDragStart = function (dragStartEvent) {\n        this._setColorSliderPosMax();\n        this._setHueBarPosMax();\n        this._prepareColorSliderForMouseEvent(dragStartEvent);\n      };\n      /**\n       * Drag event handler\n       * @param {Drag#drag} dragEvent - drag event data\n       */\n\n      Slider.prototype._onDrag = function (dragEvent) {\n        var cache = this._dragDataCache;\n        var mousePos = getMousePosition(dragEvent.originEvent, cache.parentElement);\n        if (cache.isColorSlider) {\n          this._moveColorSliderByPosition(mousePos[0], mousePos[1]);\n        } else {\n          this._moveHueByPosition(mousePos[1]);\n        }\n      };\n      /**\n       * Drag#dragEnd event handler\n       */\n\n      Slider.prototype._onDragEnd = function () {\n        this._dragDataCache = null;\n      };\n      CustomEvents.mixin(Slider);\n      module.exports = Slider;\n\n      /***/\n    }, /* 32 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview module for manipulate SVG or VML object\n       */\n      var isOldBrowser = __webpack_require__(4).isOldBrowser;\n      var PARSE_TRANSLATE_NUM_REGEX = /[\\.\\-0-9]+/g;\n      var SVG_HUE_HANDLE_RIGHT_POS = -6;\n      /* istanbul ignore next */\n\n      var svgvml = {\n        /**\n         * Get translate transform value\n         * @param {SVG|VML} obj - svg or vml object that want to know translate x, y\n         * @returns {number[]} translated coordinates [x, y]\n         */\n        getTranslateXY: function (obj) {\n          var temp;\n          if (isOldBrowser) {\n            temp = obj.style;\n            return [parseFloat(temp.top), parseFloat(temp.left)];\n          }\n          temp = obj.getAttribute('transform');\n          if (!temp) {\n            return [0, 0];\n          }\n          temp = temp.match(PARSE_TRANSLATE_NUM_REGEX); // need caution for difference of VML, SVG coordinates system.\n          // translate command need X coords in first parameter. but VML is use CSS coordinate system(top, left)\n\n          return [parseFloat(temp[1]), parseFloat(temp[0])];\n        },\n        /**\n         * Set translate transform value\n         * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n         * @param {number} x - translate X value\n         * @param {number} y - translate Y value\n         */\n        setTranslateXY: function (obj, x, y) {\n          if (isOldBrowser) {\n            obj.style.left = x + 'px';\n            obj.style.top = y + 'px';\n          } else {\n            obj.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n          }\n        },\n        /**\n         * Set translate only Y value\n         * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n         * @param {number} y - translate Y value\n         */\n        setTranslateY: function (obj, y) {\n          if (isOldBrowser) {\n            obj.style.top = y + 'px';\n          } else {\n            obj.setAttribute('transform', 'translate(' + SVG_HUE_HANDLE_RIGHT_POS + ',' + y + ')');\n          }\n        },\n        /**\n         * Set stroke color to SVG or VML object\n         * @param {SVG|VML} obj - SVG or VML object to setting stroke color\n         * @param {string} colorStr - color string\n         */\n        setStrokeColor: function (obj, colorStr) {\n          if (isOldBrowser) {\n            obj.strokecolor = colorStr;\n          } else {\n            obj.setAttribute('stroke', colorStr);\n          }\n        },\n        /**\n         * Set gradient stop color to SVG, VML object.\n         * @param {SVG|VML} obj - SVG, VML object to applying gradient stop color\n         * @param {string} colorStr - color string\n         */\n        setGradientColorStop: function (obj, colorStr) {\n          if (isOldBrowser) {\n            obj.color = colorStr;\n          } else {\n            obj.setAttribute('stop-color', colorStr);\n          }\n        }\n      };\n      module.exports = svgvml;\n\n      /***/\n    }, /* 33 */\n    /***/function (module, exports, __webpack_require__) {\n      __webpack_require__(34);\n      module.exports = __webpack_require__(35);\n\n      /***/\n    }, /* 34 */\n    /***/function (module, exports, __webpack_require__) {\n\n      // extracted by mini-css-extract-plugin\n\n      /***/}, /* 35 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var Collection = __webpack_require__(19);\n      var View = __webpack_require__(8);\n      var Drag = __webpack_require__(24);\n      var create = __webpack_require__(48);\n      var Palette = __webpack_require__(29);\n      var Slider = __webpack_require__(31);\n      var colorUtil = __webpack_require__(12);\n      var svgvml = __webpack_require__(32);\n      var colorPicker = {\n        Collection: Collection,\n        View: View,\n        Drag: Drag,\n        create: create,\n        Palette: Palette,\n        Slider: Slider,\n        colorutil: colorUtil,\n        svgvml: svgvml\n      };\n      module.exports = colorPicker;\n\n      /***/\n    }, /* 36 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is null or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is null or not.\n       * If the given variable(arguments[0]) is null, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is null?\n       * @memberof module:type\n       */\n      function isNull(obj) {\n        return obj === null;\n      }\n      module.exports = isNull;\n\n      /***/\n    }, /* 37 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Send hostname on DOMContentLoaded.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isUndefined = __webpack_require__(3);\n      var imagePing = __webpack_require__(38);\n      var ms7days = 7 * 24 * 60 * 60 * 1000;\n\n      /**\n       * Check if the date has passed 7 days\n       * @param {number} date - milliseconds\n       * @returns {boolean}\n       * @private\n       */\n      function isExpired(date) {\n        var now = new Date().getTime();\n        return now - date > ms7days;\n      }\n\n      /**\n       * Send hostname on DOMContentLoaded.\n       * To prevent hostname set tui.usageStatistics to false.\n       * @param {string} appName - application name\n       * @param {string} trackingId - GA tracking ID\n       * @ignore\n       */\n      function sendHostname(appName, trackingId) {\n        var url = 'https://www.google-analytics.com/collect';\n        var hostname = location.hostname;\n        var hitType = 'event';\n        var eventCategory = 'use';\n        var applicationKeyForStorage = 'TOAST UI ' + appName + ' for ' + hostname + ': Statistics';\n        var date = window.localStorage.getItem(applicationKeyForStorage);\n\n        // skip if the flag is defined and is set to false explicitly\n        if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {\n          return;\n        }\n\n        // skip if not pass seven days old\n        if (date && !isExpired(date)) {\n          return;\n        }\n        window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());\n        setTimeout(function () {\n          if (document.readyState === 'interactive' || document.readyState === 'complete') {\n            imagePing(url, {\n              v: 1,\n              t: hitType,\n              tid: trackingId,\n              cid: hostname,\n              dp: hostname,\n              dh: appName,\n              el: appName,\n              ec: eventCategory\n            });\n          }\n        }, 1000);\n      }\n      module.exports = sendHostname;\n\n      /***/\n    }, /* 38 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Request image ping.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var forEachOwnProperties = __webpack_require__(7);\n\n      /**\n       * @module request\n       */\n\n      /**\n       * Request image ping.\n       * @param {String} url url for ping request\n       * @param {Object} trackingInfo infos for make query string\n       * @returns {HTMLElement}\n       * @memberof module:request\n       * @example\n       * var imagePing = require('tui-code-snippet/request/imagePing'); // node, commonjs\n       *\n       * imagePing('https://www.google-analytics.com/collect', {\n       *     v: 1,\n       *     t: 'event',\n       *     tid: 'trackingid',\n       *     cid: 'cid',\n       *     dp: 'dp',\n       *     dh: 'dh'\n       * });\n       */\n      function imagePing(url, trackingInfo) {\n        var trackingElement = document.createElement('img');\n        var queryString = '';\n        forEachOwnProperties(trackingInfo, function (value, key) {\n          queryString += '&' + key + '=' + value;\n        });\n        queryString = queryString.substring(1);\n        trackingElement.src = url + '?' + queryString;\n        trackingElement.style.display = 'none';\n        document.body.appendChild(trackingElement);\n        document.body.removeChild(trackingElement);\n        return trackingElement;\n      }\n      module.exports = imagePing;\n\n      /***/\n    }, /* 39 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Add css class to element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var forEach = __webpack_require__(2);\n      var inArray = __webpack_require__(5);\n      var getClass = __webpack_require__(23);\n      var setClassName = __webpack_require__(40);\n\n      /**\n       * domUtil module\n       * @module domUtil\n       */\n\n      /**\n       * Add css class to element\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {...string} cssClass - css classes to add\n       * @memberof module:domUtil\n       */\n      function addClass(element) {\n        var cssClass = Array.prototype.slice.call(arguments, 1);\n        var classList = element.classList;\n        var newClass = [];\n        var origin;\n        if (classList) {\n          forEach(cssClass, function (name) {\n            element.classList.add(name);\n          });\n          return;\n        }\n        origin = getClass(element);\n        if (origin) {\n          cssClass = [].concat(origin.split(/\\s+/), cssClass);\n        }\n        forEach(cssClass, function (cls) {\n          if (inArray(cls, newClass) < 0) {\n            newClass.push(cls);\n          }\n        });\n        setClassName(element, newClass);\n      }\n      module.exports = addClass;\n\n      /***/\n    }, /* 40 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Set className value\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isArray = __webpack_require__(1);\n      var isUndefined = __webpack_require__(3);\n\n      /**\n       * Set className value\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {(string|string[])} cssClass - class names\n       * @private\n       */\n      function setClassName(element, cssClass) {\n        cssClass = isArray(cssClass) ? cssClass.join(' ') : cssClass;\n        cssClass = cssClass.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        if (isUndefined(element.className.baseVal)) {\n          element.className = cssClass;\n          return;\n        }\n        element.className.baseVal = cssClass;\n      }\n      module.exports = setClassName;\n\n      /***/\n    }, /* 41 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check whether the given variable is a number or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a number or not.\n       * If the given variable is a number, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is number?\n       * @memberof module:type\n       */\n      function isNumber(obj) {\n        return typeof obj === 'number' || obj instanceof Number;\n      }\n      module.exports = isNumber;\n\n      /***/\n    }, /* 42 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Disable browser's text selection behaviors.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var on = __webpack_require__(14);\n      var preventDefault = __webpack_require__(15);\n      var setData = __webpack_require__(43);\n      var testCSSProp = __webpack_require__(27);\n      var SUPPORT_SELECTSTART = ('onselectstart' in document);\n      var KEY_PREVIOUS_USER_SELECT = 'prevUserSelect';\n      var userSelectProperty = testCSSProp(['userSelect', 'WebkitUserSelect', 'OUserSelect', 'MozUserSelect', 'msUserSelect']);\n\n      /**\n       * Disable browser's text selection behaviors.\n       * @param {HTMLElement} [el] - target element. if not supplied, use `document`\n       * @memberof module:domUtil\n       */\n      function disableTextSelection(el) {\n        if (!el) {\n          el = document;\n        }\n        if (SUPPORT_SELECTSTART) {\n          on(el, 'selectstart', preventDefault);\n        } else {\n          el = el === document ? document.documentElement : el;\n          setData(el, KEY_PREVIOUS_USER_SELECT, el.style[userSelectProperty]);\n          el.style[userSelectProperty] = 'none';\n        }\n      }\n      module.exports = disableTextSelection;\n\n      /***/\n    }, /* 43 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Set data attribute to target element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var convertToKebabCase = __webpack_require__(16);\n\n      /**\n       * Set data attribute to target element\n       * @param {HTMLElement} element - element to set data attribute\n       * @param {string} key - key\n       * @param {string} value - value\n       * @memberof module:domUtil\n       */\n      function setData(element, key, value) {\n        if (element.dataset) {\n          element.dataset[key] = value;\n          return;\n        }\n        element.setAttribute('data-' + convertToKebabCase(key), value);\n      }\n      module.exports = setData;\n\n      /***/\n    }, /* 44 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Transform the Array-like object to Array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var off = __webpack_require__(17);\n      var preventDefault = __webpack_require__(15);\n      var getData = __webpack_require__(45);\n      var removeData = __webpack_require__(46);\n      var testCSSProp = __webpack_require__(27);\n      var SUPPORT_SELECTSTART = ('onselectstart' in document);\n      var KEY_PREVIOUS_USER_SELECT = 'prevUserSelect';\n      var userSelectProperty = testCSSProp(['userSelect', 'WebkitUserSelect', 'OUserSelect', 'MozUserSelect', 'msUserSelect']);\n\n      /**\n       * Enable browser's text selection behaviors.\n       * @param {HTMLElement} [el] - target element. if not supplied, use `document`\n       * @memberof module:domUtil\n       */\n      function enableTextSelection(el) {\n        if (!el) {\n          el = document;\n        }\n        if (SUPPORT_SELECTSTART) {\n          off(el, 'selectstart', preventDefault);\n        } else {\n          el = el === document ? document.documentElement : el;\n          el.style[userSelectProperty] = getData(el, KEY_PREVIOUS_USER_SELECT) || 'auto';\n          removeData(el, KEY_PREVIOUS_USER_SELECT);\n        }\n      }\n      module.exports = enableTextSelection;\n\n      /***/\n    }, /* 45 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Get data value from data-attribute\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var convertToKebabCase = __webpack_require__(16);\n\n      /**\n       * Get data value from data-attribute\n       * @param {HTMLElement} element - target element\n       * @param {string} key - key\n       * @returns {string} value\n       * @memberof module:domUtil\n       */\n      function getData(element, key) {\n        if (element.dataset) {\n          return element.dataset[key];\n        }\n        return element.getAttribute('data-' + convertToKebabCase(key));\n      }\n      module.exports = getData;\n\n      /***/\n    }, /* 46 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Remove data property\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var convertToKebabCase = __webpack_require__(16);\n\n      /**\n       * Remove data property\n       * @param {HTMLElement} element - target element\n       * @param {string} key - key\n       * @memberof module:domUtil\n       */\n      function removeData(element, key) {\n        if (element.dataset) {\n          delete element.dataset[key];\n          return;\n        }\n        element.removeAttribute('data-' + convertToKebabCase(key));\n      }\n      module.exports = removeData;\n\n      /***/\n    }, /* 47 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Normalize mouse event's button attributes.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var browser = __webpack_require__(22);\n      var inArray = __webpack_require__(5);\n      var primaryButton = ['0', '1', '3', '5', '7'];\n      var secondaryButton = ['2', '6'];\n      var wheelButton = ['4'];\n\n      /**\n       * @module domEvent\n       */\n\n      /**\n       * Normalize mouse event's button attributes.\n       *\n       * Can detect which button is clicked by this method.\n       *\n       * Meaning of return numbers\n       *\n       * - 0: primary mouse button\n       * - 1: wheel button or center button\n       * - 2: secondary mouse button\n       * @param {MouseEvent} mouseEvent - The mouse event object want to know.\n       * @returns {number} - The value of meaning which button is clicked?\n       * @memberof module:domEvent\n       */\n      function getMouseButton(mouseEvent) {\n        if (browser.msie && browser.version <= 8) {\n          return getMouseButtonIE8AndEarlier(mouseEvent);\n        }\n        return mouseEvent.button;\n      }\n\n      /**\n       * Normalize return value of mouseEvent.button\n       * Make same to standard MouseEvent's button value\n       * @param {DispCEventObj} mouseEvent - mouse event object\n       * @returns {number|null} - id indicating which mouse button is clicked\n       * @private\n       */\n      function getMouseButtonIE8AndEarlier(mouseEvent) {\n        var button = String(mouseEvent.button);\n        if (inArray(button, primaryButton) > -1) {\n          return 0;\n        }\n        if (inArray(button, secondaryButton) > -1) {\n          return 2;\n        }\n        if (inArray(button, wheelButton) > -1) {\n          return 1;\n        }\n        return null;\n      }\n      module.exports = getMouseButton;\n\n      /***/\n    }, /* 48 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview ColorPicker factory module\n       */\n      var CustomEvents = __webpack_require__(10);\n      var extend = __webpack_require__(0);\n      var util = __webpack_require__(4);\n      var colorUtil = __webpack_require__(12);\n      var Layout = __webpack_require__(49);\n      var Palette = __webpack_require__(29);\n      var Slider = __webpack_require__(31);\n      /**\n       * Create an unique id for a color-picker instance.\n       * @private\n       */\n\n      var currentId = 0;\n      function generateId() {\n        currentId += 1;\n        return currentId;\n      }\n      /**\n       * @constructor\n       * @param {object} options - options for colorpicker component\n       *  @param {HTMLDivElement} options.container - container element\n       *  @param {string} [options.color='#ffffff'] - default selected color\n       *  @param {string[]} [options.preset] - color preset for palette (use base16 palette if not supplied)\n       *  @param {string} [options.cssPrefix='tui-colorpicker-'] - css prefix text for each child elements\n       *  @param {string} [options.detailTxt='Detail'] - text for detail button.\n       *  @param {boolean} [options.usageStatistics=true] - Let us know the hostname. If you don't want to send the hostname, please set to false.\n       * @example\n       * // ES6\n       * import colorPicker from 'tui-color-picker';\n       *\n       * // CommonJS\n       * const colorPicker = require('tui-color-picker');\n       *\n       * // Browser\n       * const colorPicker = tui.colorPicker;\n       *\n       * const instance = colorPicker.create({\n       *   container: document.getElementById('color-picker')\n       * });\n       */\n\n      function ColorPicker(options) {\n        var layout;\n        if (!(this instanceof ColorPicker)) {\n          return new ColorPicker(options);\n        }\n        /**\n         * Option object\n         * @type {object}\n         * @private\n         */\n\n        options = this.options = extend({\n          container: null,\n          color: '#f8f8f8',\n          preset: ['#181818', '#282828', '#383838', '#585858', '#b8b8b8', '#d8d8d8', '#e8e8e8', '#f8f8f8', '#ab4642', '#dc9656', '#f7ca88', '#a1b56c', '#86c1b9', '#7cafc2', '#ba8baf', '#a16946'],\n          cssPrefix: 'tui-colorpicker-',\n          detailTxt: 'Detail',\n          id: generateId(),\n          usageStatistics: true\n        }, options);\n        if (!options.container) {\n          throw new Error('ColorPicker(): need container option.');\n        }\n        /**********\n         * Create layout view\n         **********/\n\n        /**\n         * @type {Layout}\n         * @private\n         */\n\n        layout = this.layout = new Layout(options, options.container);\n        /**********\n         * Create palette view\n         **********/\n\n        this.palette = new Palette(options, layout.container);\n        this.palette.on({\n          _selectColor: this._onSelectColorInPalette,\n          _toggleSlider: this._onToggleSlider\n        }, this);\n        /**********\n         * Create slider view\n         **********/\n\n        this.slider = new Slider(options, layout.container);\n        this.slider.on('_selectColor', this._onSelectColorInSlider, this);\n        /**********\n         * Add child views\n         **********/\n\n        layout.addChild(this.palette);\n        layout.addChild(this.slider);\n        this.render(options.color);\n        if (options.usageStatistics) {\n          util.sendHostName();\n        }\n      }\n      /**\n       * Handler method for Palette#_selectColor event\n       * @private\n       * @fires ColorPicker#selectColor\n       * @param {object} selectColorEventData - event data\n       */\n\n      ColorPicker.prototype._onSelectColorInPalette = function (selectColorEventData) {\n        var color = selectColorEventData.color;\n        var opt = this.options;\n        if (!colorUtil.isValidRGB(color) && color !== '') {\n          this.render();\n          return;\n        }\n        /**\n         * @event ColorPicker#selectColor\n         * @type {object}\n         * @property {string} color - selected color (hex string)\n         * @property {string} origin - flags for represent the source of event fires.\n         */\n\n        this.fire('selectColor', {\n          color: color,\n          origin: 'palette'\n        });\n        if (opt.color === color) {\n          return;\n        }\n        opt.color = color;\n        this.render(color);\n      };\n      /**\n       * Handler method for Palette#_toggleSlider event\n       * @private\n       */\n\n      ColorPicker.prototype._onToggleSlider = function () {\n        this.slider.toggle(!this.slider.isVisible());\n      };\n      /**\n       * Handler method for Slider#_selectColor event\n       * @private\n       * @fires ColorPicker#selectColor\n       * @param {object} selectColorEventData - event data\n       */\n\n      ColorPicker.prototype._onSelectColorInSlider = function (selectColorEventData) {\n        var color = selectColorEventData.color;\n        var opt = this.options;\n        /**\n         * @event ColorPicker#selectColor\n         * @type {object}\n         * @property {string} color - selected color (hex string)\n         * @property {string} origin - flags for represent the source of event fires.\n         * @ignore\n         */\n\n        this.fire('selectColor', {\n          color: color,\n          origin: 'slider'\n        });\n        if (opt.color === color) {\n          return;\n        }\n        opt.color = color;\n        this.palette.render(color);\n      };\n      /**********\n       * PUBLIC API\n       **********/\n\n      /**\n       * Set color to colorpicker instance.<br>\n       * The string parameter must be hex color value\n       * @param {string} hexStr - hex formatted color string\n       * @example\n       * instance.setColor('#ffff00');\n       */\n\n      ColorPicker.prototype.setColor = function (hexStr) {\n        if (!colorUtil.isValidRGB(hexStr)) {\n          throw new Error('ColorPicker#setColor(): need valid hex string color value');\n        }\n        this.options.color = hexStr;\n        this.render(hexStr);\n      };\n      /**\n       * Get hex color string of current selected color in colorpicker instance.\n       * @returns {string} hex string formatted color\n       * @example\n       * instance.setColor('#ffff00');\n       * instance.getColor(); // '#ffff00';\n       */\n\n      ColorPicker.prototype.getColor = function () {\n        return this.options.color;\n      };\n      /**\n       * Toggle colorpicker element. set true then reveal colorpicker view.\n       * @param {boolean} [isShow=false] - A flag to show\n       * @example\n       * instance.toggle(false); // hide\n       * instance.toggle(); // hide\n       * instance.toggle(true); // show\n       */\n\n      ColorPicker.prototype.toggle = function (isShow) {\n        this.layout.container.style.display = !!isShow ? 'block' : 'none';\n      };\n      /**\n       * Render colorpicker\n       * @param {string} [color] - selected color\n       * @ignore\n       */\n\n      ColorPicker.prototype.render = function (color) {\n        this.layout.render(color || this.options.color);\n      };\n      /**\n       * Destroy colorpicker instance.\n       * @example\n       * instance.destroy(); // DOM-element is removed\n       */\n\n      ColorPicker.prototype.destroy = function () {\n        this.layout.destroy();\n        this.options.container.innerHTML = '';\n        this.layout = this.slider = this.palette = this.options = null;\n      };\n      CustomEvents.mixin(ColorPicker);\n      module.exports = ColorPicker;\n\n      /***/\n    }, /* 49 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview ColorPicker layout module\n       */\n      var extend = __webpack_require__(0);\n      var inherit = __webpack_require__(18);\n      var domUtil = __webpack_require__(9);\n      var View = __webpack_require__(8);\n      /**\n       * @constructor\n       * @extends {View}\n       * @param {object} options - option object\n       *  @param {string} options.cssPrefix - css prefix for each child elements\n       * @param {HTMLDivElement} container - container\n       * @ignore\n       */\n\n      function Layout(options, container) {\n        /**\n         * option object\n         * @type {object}\n         */\n        this.options = extend({\n          cssPrefix: 'tui-colorpicker-'\n        }, options);\n        container = domUtil.appendHTMLElement('div', container, this.options.cssPrefix + 'container');\n        View.call(this, options, container);\n        this.render();\n      }\n      inherit(Layout, View);\n      /**\n       * @override\n       * @param {string} [color] - selected color\n       */\n\n      Layout.prototype.render = function (color) {\n        this.recursive(function (view) {\n          view.render(color);\n        }, true);\n      };\n      module.exports = Layout;\n\n      /***/\n    }, /* 50 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Create a new object with the specified prototype object and properties.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module inheritance\n       */\n\n      /**\n       * Create a new object with the specified prototype object and properties.\n       * @param {Object} obj This object will be a prototype of the newly-created object.\n       * @returns {Object}\n       * @memberof module:inheritance\n       */\n      function createObject(obj) {\n        function F() {} // eslint-disable-line require-jsdoc\n        F.prototype = obj;\n        return new F();\n      }\n      module.exports = createObject;\n\n      /***/\n    }, /* 51 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Palette view template\n       */\n      var template = __webpack_require__(52);\n      module.exports = function (context) {\n        var item = ['<li><input class=\"{{cssPrefix}}palette-button{{isSelected @this}}{{getItemClass @this}}\" type=\"button\"', '{{if isValidRGB @this}}', ' style=\"background-color:{{@this}};color:{{@this}}\"', '{{/if}}', ' title=\"{{@this}}\" value=\"{{@this}}\" /></li>'].join('');\n        var layout = ['<ul class=\"{{cssPrefix}}clearfix\">', '{{each preset}}', item, '{{/each}}', '</ul>', '<div class=\"{{cssPrefix}}clearfix\" style=\"overflow:hidden\">', '<input type=\"button\" class=\"{{cssPrefix}}palette-toggle-slider\" value=\"{{detailTxt}}\" />', '<input type=\"text\" class=\"{{cssPrefix}}palette-hex\" value=\"{{color}}\" maxlength=\"7\" />', '<span class=\"{{cssPrefix}}palette-preview\" style=\"background-color:{{color}};color:{{color}}\">{{color}}</span>', '</div>'].join('\\n');\n        return template(layout, context);\n      };\n\n      /***/\n    }, /* 52 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Convert text by binding expressions with context.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var inArray = __webpack_require__(5);\n      var forEach = __webpack_require__(2);\n      var isArray = __webpack_require__(1);\n      var isString = __webpack_require__(11);\n      var extend = __webpack_require__(0);\n\n      // IE8 does not support capture groups.\n      var EXPRESSION_REGEXP = /{{\\s?|\\s?}}/g;\n      var BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\\[[a-zA-Z0-9_@\"']+\\]$/;\n      var BRACKET_REGEXP = /\\[\\s?|\\s?\\]/;\n      var DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\\.[a-zA-Z_]+$/;\n      var DOT_REGEXP = /\\./;\n      var STRING_NOTATION_REGEXP = /^[\"']\\w+[\"']$/;\n      var STRING_REGEXP = /\"|'/g;\n      var NUMBER_REGEXP = /^-?\\d+\\.?\\d*$/;\n      var EXPRESSION_INTERVAL = 2;\n      var BLOCK_HELPERS = {\n        'if': handleIf,\n        'each': handleEach,\n        'with': handleWith\n      };\n      var isValidSplit = 'a'.split(/a/).length === 3;\n\n      /**\n       * Split by RegExp. (Polyfill for IE8)\n       * @param {string} text - text to be splitted\\\n       * @param {RegExp} regexp - regular expression\n       * @returns {Array.<string>}\n       */\n      var splitByRegExp = function () {\n        if (isValidSplit) {\n          return function (text, regexp) {\n            return text.split(regexp);\n          };\n        }\n        return function (text, regexp) {\n          var result = [];\n          var prevIndex = 0;\n          var match, index;\n          if (!regexp.global) {\n            regexp = new RegExp(regexp, 'g');\n          }\n          match = regexp.exec(text);\n          while (match !== null) {\n            index = match.index;\n            result.push(text.slice(prevIndex, index));\n            prevIndex = index + match[0].length;\n            match = regexp.exec(text);\n          }\n          result.push(text.slice(prevIndex));\n          return result;\n        };\n      }();\n\n      /**\n       * Find value in the context by an expression.\n       * @param {string} exp - an expression\n       * @param {object} context - context\n       * @returns {*}\n       * @private\n       */\n      // eslint-disable-next-line complexity\n      function getValueFromContext(exp, context) {\n        var splitedExps;\n        var value = context[exp];\n        if (exp === 'true') {\n          value = true;\n        } else if (exp === 'false') {\n          value = false;\n        } else if (STRING_NOTATION_REGEXP.test(exp)) {\n          value = exp.replace(STRING_REGEXP, '');\n        } else if (BRACKET_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(BRACKET_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];\n        } else if (DOT_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(DOT_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];\n        } else if (NUMBER_REGEXP.test(exp)) {\n          value = parseFloat(exp);\n        }\n        return value;\n      }\n\n      /**\n       * Extract elseif and else expressions.\n       * @param {Array.<string>} ifExps - args of if expression\n       * @param {Array.<string>} sourcesInsideBlock - sources inside if block\n       * @returns {object} - exps: expressions of if, elseif, and else / sourcesInsideIf: sources inside if, elseif, and else block.\n       * @private\n       */\n      function extractElseif(ifExps, sourcesInsideBlock) {\n        var exps = [ifExps];\n        var sourcesInsideIf = [];\n        var otherIfCount = 0;\n        var start = 0;\n\n        // eslint-disable-next-line complexity\n        forEach(sourcesInsideBlock, function (source, index) {\n          if (source.indexOf('if') === 0) {\n            otherIfCount += 1;\n          } else if (source === '/if') {\n            otherIfCount -= 1;\n          } else if (!otherIfCount && (source.indexOf('elseif') === 0 || source === 'else')) {\n            exps.push(source === 'else' ? ['true'] : source.split(' ').slice(1));\n            sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));\n            start = index + 1;\n          }\n        });\n        sourcesInsideIf.push(sourcesInsideBlock.slice(start));\n        return {\n          exps: exps,\n          sourcesInsideIf: sourcesInsideIf\n        };\n      }\n\n      /**\n       * Helper function for \"if\". \n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the if block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n      function handleIf(exps, sourcesInsideBlock, context) {\n        var analyzed = extractElseif(exps, sourcesInsideBlock);\n        var result = false;\n        var compiledSource = '';\n        forEach(analyzed.exps, function (exp, index) {\n          result = handleExpression(exp, context);\n          if (result) {\n            compiledSource = compile(analyzed.sourcesInsideIf[index], context);\n          }\n          return !result;\n        });\n        return compiledSource;\n      }\n\n      /**\n       * Helper function for \"each\".\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the each block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n      function handleEach(exps, sourcesInsideBlock, context) {\n        var collection = handleExpression(exps, context);\n        var additionalKey = isArray(collection) ? '@index' : '@key';\n        var additionalContext = {};\n        var result = '';\n        forEach(collection, function (item, key) {\n          additionalContext[additionalKey] = key;\n          additionalContext['@this'] = item;\n          extend(context, additionalContext);\n          result += compile(sourcesInsideBlock.slice(), context);\n        });\n        return result;\n      }\n\n      /**\n       * Helper function for \"with ... as\"\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the with block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n      function handleWith(exps, sourcesInsideBlock, context) {\n        var asIndex = inArray('as', exps);\n        var alias = exps[asIndex + 1];\n        var result = handleExpression(exps.slice(0, asIndex), context);\n        var additionalContext = {};\n        additionalContext[alias] = result;\n        return compile(sourcesInsideBlock, extend(context, additionalContext)) || '';\n      }\n\n      /**\n       * Extract sources inside block in place.\n       * @param {Array.<string>} sources - array of sources\n       * @param {number} start - index of start block\n       * @param {number} end - index of end block\n       * @returns {Array.<string>}\n       * @private\n       */\n      function extractSourcesInsideBlock(sources, start, end) {\n        var sourcesInsideBlock = sources.splice(start + 1, end - start);\n        sourcesInsideBlock.pop();\n        return sourcesInsideBlock;\n      }\n\n      /**\n       * Handle block helper function\n       * @param {string} helperKeyword - helper keyword (ex. if, each, with)\n       * @param {Array.<string>} sourcesToEnd - array of sources after the starting block\n       * @param {object} context - context\n       * @returns {Array.<string>}\n       * @private\n       */\n      function handleBlockHelper(helperKeyword, sourcesToEnd, context) {\n        var executeBlockHelper = BLOCK_HELPERS[helperKeyword];\n        var helperCount = 1;\n        var startBlockIndex = 0;\n        var endBlockIndex;\n        var index = startBlockIndex + EXPRESSION_INTERVAL;\n        var expression = sourcesToEnd[index];\n        while (helperCount && isString(expression)) {\n          if (expression.indexOf(helperKeyword) === 0) {\n            helperCount += 1;\n          } else if (expression.indexOf('/' + helperKeyword) === 0) {\n            helperCount -= 1;\n            endBlockIndex = index;\n          }\n          index += EXPRESSION_INTERVAL;\n          expression = sourcesToEnd[index];\n        }\n        if (helperCount) {\n          throw Error(helperKeyword + ' needs {{/' + helperKeyword + '}} expression.');\n        }\n        sourcesToEnd[startBlockIndex] = executeBlockHelper(sourcesToEnd[startBlockIndex].split(' ').slice(1), extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex), context);\n        return sourcesToEnd;\n      }\n\n      /**\n       * Helper function for \"custom helper\".\n       * If helper is not a function, return helper itself.\n       * @param {Array.<string>} exps - array of expressions split by spaces (first element: helper)\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n      function handleExpression(exps, context) {\n        var result = getValueFromContext(exps[0], context);\n        if (result instanceof Function) {\n          return executeFunction(result, exps.slice(1), context);\n        }\n        return result;\n      }\n\n      /**\n       * Execute a helper function.\n       * @param {Function} helper - helper function\n       * @param {Array.<string>} argExps - expressions of arguments\n       * @param {object} context - context\n       * @returns {string} - result of executing the function with arguments\n       * @private\n       */\n      function executeFunction(helper, argExps, context) {\n        var args = [];\n        forEach(argExps, function (exp) {\n          args.push(getValueFromContext(exp, context));\n        });\n        return helper.apply(null, args);\n      }\n\n      /**\n       * Get a result of compiling an expression with the context.\n       * @param {Array.<string>} sources - array of sources split by regexp of expression.\n       * @param {object} context - context\n       * @returns {Array.<string>} - array of sources that bind with its context\n       * @private\n       */\n      function compile(sources, context) {\n        var index = 1;\n        var expression = sources[index];\n        var exps, firstExp, result;\n        while (isString(expression)) {\n          exps = expression.split(' ');\n          firstExp = exps[0];\n          if (BLOCK_HELPERS[firstExp]) {\n            result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);\n            sources = sources.concat(result);\n          } else {\n            sources[index] = handleExpression(exps, context);\n          }\n          index += EXPRESSION_INTERVAL;\n          expression = sources[index];\n        }\n        return sources.join('');\n      }\n\n      /**\n       * Convert text by binding expressions with context.\n       * <br>\n       * If expression exists in the context, it will be replaced.\n       * ex) '{{title}}' with context {title: 'Hello!'} is converted to 'Hello!'.\n       * An array or object can be accessed using bracket and dot notation.\n       * ex) '{{odds\\[2\\]}}' with context {odds: \\[1, 3, 5\\]} is converted to '5'.\n       * ex) '{{evens\\[first\\]}}' with context {evens: \\[2, 4\\], first: 0} is converted to '2'.\n       * ex) '{{project\\[\"name\"\\]}}' and '{{project.name}}' with context {project: {name: 'CodeSnippet'}} is converted to 'CodeSnippet'.\n       * <br>\n       * If replaced expression is a function, next expressions will be arguments of the function.\n       * ex) '{{add 1 2}}' with context {add: function(a, b) {return a + b;}} is converted to '3'.\n       * <br>\n       * It has 3 predefined block helpers '{{helper ...}} ... {{/helper}}': 'if', 'each', 'with ... as ...'.\n       * 1) 'if' evaluates conditional statements. It can use with 'elseif' and 'else'.\n       * 2) 'each' iterates an array or object. It provides '@index'(array), '@key'(object), and '@this'(current element).\n       * 3) 'with ... as ...' provides an alias.\n       * @param {string} text - text with expressions\n       * @param {object} context - context\n       * @returns {string} - text that bind with its context\n       * @memberof module:domUtil\n       * @example\n       * var template = require('tui-code-snippet/domUtil/template');\n       * \n       * var source = \n       *     '<h1>'\n       *   +   '{{if isValidNumber title}}'\n       *   +     '{{title}}th'\n       *   +   '{{elseif isValidDate title}}'\n       *   +     'Date: {{title}}'\n       *   +   '{{/if}}'\n       *   + '</h1>'\n       *   + '{{each list}}'\n       *   +   '{{with addOne @index as idx}}'\n       *   +     '<p>{{idx}}: {{@this}}</p>'\n       *   +   '{{/with}}'\n       *   + '{{/each}}';\n       * \n       * var context = {\n       *   isValidDate: function(text) {\n       *     return /^\\d{4}-(0|1)\\d-(0|1|2|3)\\d$/.test(text);\n       *   },\n       *   isValidNumber: function(text) {\n       *     return /^\\d+$/.test(text);\n       *   }\n       *   title: '2019-11-25',\n       *   list: ['Clean the room', 'Wash the dishes'],\n       *   addOne: function(num) {\n       *     return num + 1;\n       *   }\n       * };\n       * \n       * var result = template(source, context);\n       * console.log(result); // <h1>Date: 2019-11-25</h1><p>1: Clean the room</p><p>2: Wash the dishes</p>\n       */\n      function template(text, context) {\n        return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);\n      }\n      module.exports = template;\n\n      /***/\n    }, /* 53 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Get mouse position from mouse event\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var isArray = __webpack_require__(1);\n\n      /**\n       * Get mouse position from mouse event\n       *\n       * If supplied relatveElement parameter then return relative position based on\n       *  element\n       * @param {(MouseEvent|object|number[])} position - mouse position object\n       * @param {HTMLElement} relativeElement HTML element that calculate relative\n       *  position\n       * @returns {number[]} mouse position\n       * @memberof module:domEvent\n       */\n      function getMousePosition(position, relativeElement) {\n        var positionArray = isArray(position);\n        var clientX = positionArray ? position[0] : position.clientX;\n        var clientY = positionArray ? position[1] : position.clientY;\n        var rect;\n        if (!relativeElement) {\n          return [clientX, clientY];\n        }\n        rect = relativeElement.getBoundingClientRect();\n        return [clientX - rect.left - relativeElement.clientLeft, clientY - rect.top - relativeElement.clientTop];\n      }\n      module.exports = getMousePosition;\n\n      /***/\n    }, /* 54 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Find parent element recursively\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var matches = __webpack_require__(55);\n\n      /**\n       * Find parent element recursively\n       * @param {HTMLElement} element - base element to start find\n       * @param {string} selector - selector string for find\n       * @returns {HTMLElement} - element finded or null\n       * @memberof module:domUtil\n       */\n      function closest(element, selector) {\n        var parent = element.parentNode;\n        if (matches(element, selector)) {\n          return element;\n        }\n        while (parent && parent !== document) {\n          if (matches(parent, selector)) {\n            return parent;\n          }\n          parent = parent.parentNode;\n        }\n        return null;\n      }\n      module.exports = closest;\n\n      /***/\n    }, /* 55 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Check element match selector\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var inArray = __webpack_require__(5);\n      var toArray = __webpack_require__(56);\n      var elProto = Element.prototype;\n      var matchSelector = elProto.matches || elProto.webkitMatchesSelector || elProto.mozMatchesSelector || elProto.msMatchesSelector || function (selector) {\n        var doc = this.document || this.ownerDocument;\n        return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;\n      };\n\n      /**\n       * Check element match selector\n       * @param {HTMLElement} element - element to check\n       * @param {string} selector - selector to check\n       * @returns {boolean} is selector matched to element?\n       * @memberof module:domUtil\n       */\n      function matches(element, selector) {\n        return matchSelector.call(element, selector);\n      }\n      module.exports = matches;\n\n      /***/\n    }, /* 56 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /**\n       * @fileoverview Transform the Array-like object to Array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n      var forEachArray = __webpack_require__(6);\n\n      /**\n       * Transform the Array-like object to Array.\n       * In low IE (below 8), Array.prototype.slice.call is not perfect. So, try-catch statement is used.\n       * @param {*} arrayLike Array-like object\n       * @returns {Array} Array\n       * @memberof module:collection\n       * @example\n       * var toArray = require('tui-code-snippet/collection/toArray'); // node, commonjs\n       *\n       * var arrayLike = {\n       *     0: 'one',\n       *     1: 'two',\n       *     2: 'three',\n       *     3: 'four',\n       *     length: 4\n       * };\n       * var result = toArray(arrayLike);\n       *\n       * alert(result instanceof Array); // true\n       * alert(result); // one,two,three,four\n       */\n      function toArray(arrayLike) {\n        var arr;\n        try {\n          arr = Array.prototype.slice.call(arrayLike);\n        } catch (e) {\n          arr = [];\n          forEachArray(arrayLike, function (value) {\n            arr.push(value);\n          });\n        }\n        return arr;\n      }\n      module.exports = toArray;\n\n      /***/\n    }, /* 57 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      /* WEBPACK VAR INJECTION */\n      (function (global) {\n        /**\n        * @fileoverview Slider template\n        */\n\n        var isOldBrowser = __webpack_require__(4).isOldBrowser;\n        var layout = ['<div class=\"{{cssPrefix}}slider-left {{cssPrefix}}slider-part\">{{slider}}</div>', '<div class=\"{{cssPrefix}}slider-right {{cssPrefix}}slider-part\">{{huebar}}</div>'].join('\\n');\n        var SVGSlider = ['<svg class=\"{{cssPrefix}}svg {{cssPrefix}}svg-slider\">', '<defs>', '<linearGradient id=\"{{cssPrefix}}svg-fill-color-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">', '<stop offset=\"0%\" stop-color=\"rgb(255,255,255)\" />', '<stop class=\"{{cssPrefix}}slider-basecolor\" offset=\"100%\" stop-color=\"rgb(255,0,0)\" />', '</linearGradient>', '<linearGradient id=\"{{cssPrefix}}svn-fill-black-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">', '<stop offset=\"0%\" style=\"stop-color:rgb(0,0,0);stop-opacity:0\" />', '<stop offset=\"100%\" style=\"stop-color:rgb(0,0,0);stop-opacity:1\" />', '</linearGradient>', '</defs>', '<rect width=\"100%\" height=\"100%\" fill=\"url(#{{cssPrefix}}svg-fill-color-{{id}})\"></rect>', '<rect width=\"100%\" height=\"100%\" fill=\"url(#{{cssPrefix}}svn-fill-black-{{id}})\"></rect>', '<path transform=\"translate(0,0)\" class=\"{{cssPrefix}}slider-handle\" d=\"M0 7.5 L15 7.5 M7.5 15 L7.5 0 M2 7 a5.5 5.5 0 1 1 0 1 Z\" stroke=\"black\" stroke-width=\"0.75\" fill=\"none\" />', '</svg>'].join('\\n');\n        var VMLSlider = ['<div class=\"{{cssPrefix}}vml-slider\">', '<v:rect strokecolor=\"none\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-slider-bg\">', '<v:fill class=\"{{cssPrefix}}vml {{cssPrefix}}slider-basecolor\" type=\"gradient\" method=\"none\" color=\"#ff0000\" color2=\"#fff\" angle=\"90\" />', '</v:rect>', '<v:rect strokecolor=\"#ccc\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-slider-bg\">', '<v:fill type=\"gradient\" method=\"none\" color=\"black\" color2=\"white\" o:opacity2=\"0%\" class=\"{{cssPrefix}}vml\" />', '</v:rect>', '<v:shape class=\"{{cssPrefix}}vml {{cssPrefix}}slider-handle\" coordsize=\"1 1\" style=\"width:1px;height:1px;\"' + 'path=\"m 0,7 l 14,7 m 7,14 l 7,0 ar 12,12 2,2 z\" filled=\"false\" stroked=\"true\" />', '</div>'].join('\\n');\n        var SVGHuebar = ['<svg class=\"{{cssPrefix}}svg {{cssPrefix}}svg-huebar\">', '<defs>', '<linearGradient id=\"g-{{id}}\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">', '<stop offset=\"0%\" stop-color=\"rgb(255,0,0)\" />', '<stop offset=\"16.666%\" stop-color=\"rgb(255,255,0)\" />', '<stop offset=\"33.333%\" stop-color=\"rgb(0,255,0)\" />', '<stop offset=\"50%\" stop-color=\"rgb(0,255,255)\" />', '<stop offset=\"66.666%\" stop-color=\"rgb(0,0,255)\" />', '<stop offset=\"83.333%\" stop-color=\"rgb(255,0,255)\" />', '<stop offset=\"100%\" stop-color=\"rgb(255,0,0)\" />', '</linearGradient>', '</defs>', '<rect width=\"18px\" height=\"100%\" fill=\"url(#g-{{id}})\"></rect>', '<path transform=\"translate(-6,-3)\" class=\"{{cssPrefix}}huebar-handle\" d=\"M0 0 L4 4 L0 8 L0 0 Z\" fill=\"black\" stroke=\"none\" />', '</svg>'].join('\\n');\n        var VMLHuebar = ['<div class=\"{{cssPrefix}}vml-huebar\">', '<v:rect strokecolor=\"#ccc\" class=\"{{cssPrefix}}vml {{cssPrefix}}vml-huebar-bg\">', '<v:fill type=\"gradient\" method=\"none\" colors=\"' + '0% rgb(255,0,0), 16.666% rgb(255,255,0), 33.333% rgb(0,255,0), 50% rgb(0,255,255), 66.666% rgb(0,0,255), 83.333% rgb(255,0,255), 100% rgb(255,0,0)' + '\" angle=\"180\" class=\"{{cssPrefix}}vml\" />', '</v:rect>', '<v:shape class=\"{{cssPrefix}}vml {{cssPrefix}}huebar-handle\" coordsize=\"1 1\" style=\"width:1px;height:1px;position:absolute;z-index:1;right:22px;top:-3px;\"' + 'path=\"m 0,0 l 4,4 l 0,8 l 0,0 z\" filled=\"true\" fillcolor=\"black\" stroked=\"false\" />', '</div>'].join('\\n');\n        if (isOldBrowser) {\n          global.document.namespaces.add('v', 'urn:schemas-microsoft-com:vml');\n        }\n        module.exports = {\n          layout: layout,\n          slider: isOldBrowser ? VMLSlider : SVGSlider,\n          huebar: isOldBrowser ? VMLHuebar : SVGHuebar\n        };\n        /* WEBPACK VAR INJECTION */\n      }).call(this, __webpack_require__(25));\n\n      /***/\n    }\n    /******/])\n  );\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}