{"ast":null,"code":"/*!\n * TOAST UI Editor : Color Syntax Plugin\n * @version 3.1.0 | Fri Aug 05 2022\n * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"tui-color-picker\"));else if (typeof define === 'function' && define.amd) define([\"tui-color-picker\"], factory);else if (typeof exports === 'object') exports[\"toastui\"] = factory(require(\"tui-color-picker\"));else root[\"toastui\"] = root[\"toastui\"] || {}, root[\"toastui\"][\"Editor\"] = root[\"toastui\"][\"Editor\"] || {}, root[\"toastui\"][\"Editor\"][\"plugin\"] = root[\"toastui\"][\"Editor\"][\"plugin\"] || {}, root[\"toastui\"][\"Editor\"][\"plugin\"][\"uml\"] = factory(root[\"tui\"][\"colorPicker\"]);\n})(self, function (__WEBPACK_EXTERNAL_MODULE__858__) {\n  return (/******/function () {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = {\n        /***/858: /***/function (module) {\n          module.exports = __WEBPACK_EXTERNAL_MODULE__858__;\n\n          /***/\n        }\n\n        /******/\n      };\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/ /* webpack/runtime/compat get default export */\n      /******/\n      !function () {\n        /******/ // getDefaultExport function for compatibility with non-harmony modules\n        /******/__webpack_require__.n = function (module) {\n          /******/var getter = module && module.__esModule ? /******/function () {\n            return module['default'];\n          } : /******/function () {\n            return module;\n          };\n          /******/\n          __webpack_require__.d(getter, {\n            a: getter\n          });\n          /******/\n          return getter;\n          /******/\n        };\n        /******/\n      }();\n      /******/\n      /******/ /* webpack/runtime/define property getters */\n      /******/\n      !function () {\n        /******/ // define getter functions for harmony exports\n        /******/__webpack_require__.d = function (exports, definition) {\n          /******/for (var key in definition) {\n            /******/if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n              /******/Object.defineProperty(exports, key, {\n                enumerable: true,\n                get: definition[key]\n              });\n              /******/\n            }\n            /******/\n          }\n          /******/\n        };\n        /******/\n      }();\n      /******/\n      /******/ /* webpack/runtime/hasOwnProperty shorthand */\n      /******/\n      !function () {\n        /******/__webpack_require__.o = function (obj, prop) {\n          return Object.prototype.hasOwnProperty.call(obj, prop);\n        };\n        /******/\n      }();\n      /******/\n      /************************************************************************/\n      var __webpack_exports__ = {};\n      // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n      !function () {\n        // EXPORTS\n        __webpack_require__.d(__webpack_exports__, {\n          \"default\": function () {\n            return (/* binding */colorSyntaxPlugin\n            );\n          }\n        });\n\n        // EXTERNAL MODULE: external {\"commonjs\":\"tui-color-picker\",\"commonjs2\":\"tui-color-picker\",\"amd\":\"tui-color-picker\",\"root\":[\"tui\",\"colorPicker\"]}\n        var external_commonjs_tui_color_picker_commonjs2_tui_color_picker_amd_tui_color_picker_root_tui_colorPicker_ = __webpack_require__(858);\n        var external_commonjs_tui_color_picker_commonjs2_tui_color_picker_amd_tui_color_picker_root_tui_colorPicker_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_tui_color_picker_commonjs2_tui_color_picker_amd_tui_color_picker_root_tui_colorPicker_);\n        ; // CONCATENATED MODULE: ./src/i18n/langs.ts\n        function addLangs(i18n) {\n          i18n.setLanguage('ar', {\n            'Text color': 'لون النص'\n          });\n          i18n.setLanguage(['cs', 'cs-CZ'], {\n            'Text color': 'Barva textu'\n          });\n          i18n.setLanguage(['de', 'de-DE'], {\n            'Text color': 'Textfarbe'\n          });\n          i18n.setLanguage(['en', 'en-US'], {\n            'Text color': 'Text color'\n          });\n          i18n.setLanguage(['es', 'es-ES'], {\n            'Text color': 'Color del texto'\n          });\n          i18n.setLanguage(['fi', 'fi-FI'], {\n            'Text color': 'Tekstin väri'\n          });\n          i18n.setLanguage(['fr', 'fr-FR'], {\n            'Text color': 'Couleur du texte'\n          });\n          i18n.setLanguage(['gl', 'gl-ES'], {\n            'Text color': 'Cor do texto'\n          });\n          i18n.setLanguage(['hr', 'hr-HR'], {\n            'Text color': 'Boja teksta'\n          });\n          i18n.setLanguage(['it', 'it-IT'], {\n            'Text color': 'Colore del testo'\n          });\n          i18n.setLanguage(['ja', 'ja-JP'], {\n            'Text color': '文字色相'\n          });\n          i18n.setLanguage(['ko', 'ko-KR'], {\n            'Text color': '글자 색상'\n          });\n          i18n.setLanguage(['nb', 'nb-NO'], {\n            'Text color': 'Tekstfarge'\n          });\n          i18n.setLanguage(['nl', 'nl-NL'], {\n            'Text color': 'Tekstkleur'\n          });\n          i18n.setLanguage(['pl', 'pl-PL'], {\n            'Text color': 'Kolor tekstu'\n          });\n          i18n.setLanguage(['pt', 'pt-BR'], {\n            'Text color': 'Cor do texto'\n          });\n          i18n.setLanguage(['ru', 'ru-RU'], {\n            'Text color': 'Цвет текста'\n          });\n          i18n.setLanguage(['sv', 'sv-SE'], {\n            'Text color': 'Textfärg'\n          });\n          i18n.setLanguage(['tr', 'tr-TR'], {\n            'Text color': 'Metin rengi'\n          });\n          i18n.setLanguage(['uk', 'uk-UA'], {\n            'Text color': 'Колір тексту'\n          });\n          i18n.setLanguage('zh-CN', {\n            'Text color': '文字颜色'\n          });\n          i18n.setLanguage('zh-TW', {\n            'Text color': '文字顏色'\n          });\n        }\n        ; // CONCATENATED MODULE: ./src/utils/dom.ts\n        function hasClass(element, className) {\n          return element.classList.contains(className);\n        }\n        function findParentByClassName(el, className) {\n          var currentEl = el;\n          while (currentEl && !hasClass(currentEl, className)) {\n            currentEl = currentEl.parentElement;\n          }\n          return currentEl;\n        }\n        function removeProseMirrorHackNodes(html) {\n          var reProseMirrorImage = /<img class=\"ProseMirror-separator\" alt=\"\">/g;\n          var reProseMirrorTrailingBreak = / class=\"ProseMirror-trailingBreak\"/g;\n          var resultHTML = html;\n          resultHTML = resultHTML.replace(reProseMirrorImage, '');\n          resultHTML = resultHTML.replace(reProseMirrorTrailingBreak, '');\n          return resultHTML;\n        }\n        ; // CONCATENATED MODULE: ./src/index.ts\n\n        var PREFIX = 'toastui-editor-';\n        function createApplyButton(text) {\n          var button = document.createElement('button');\n          button.setAttribute('type', 'button');\n          button.textContent = text;\n          return button;\n        }\n        function createToolbarItemOption(colorPickerContainer, i18n) {\n          return {\n            name: 'color',\n            tooltip: i18n.get('Text color'),\n            className: PREFIX + \"toolbar-icons color\",\n            popup: {\n              className: PREFIX + \"popup-color\",\n              body: colorPickerContainer,\n              style: {\n                width: 'auto'\n              }\n            }\n          };\n        }\n        function createSelection(tr, selection, SelectionClass, openTag, closeTag) {\n          var mapping = tr.mapping,\n            doc = tr.doc;\n          var from = selection.from,\n            to = selection.to,\n            empty = selection.empty;\n          var mappedFrom = mapping.map(from) + openTag.length;\n          var mappedTo = mapping.map(to) - closeTag.length;\n          return empty ? SelectionClass.create(doc, mappedTo, mappedTo) : SelectionClass.create(doc, mappedFrom, mappedTo);\n        }\n        function getCurrentEditorEl(colorPickerEl, containerClassName) {\n          var editorDefaultEl = findParentByClassName(colorPickerEl, PREFIX + \"defaultUI\");\n          return editorDefaultEl.querySelector(\".\" + containerClassName + \" .ProseMirror\");\n        }\n        var containerClassName;\n        var currentEditorEl;\n        // @TODO: add custom syntax for plugin\n        /**\n         * Color syntax plugin\n         * @param {Object} context - plugin context for communicating with editor\n         * @param {Object} options - options for plugin\n         * @param {Array.<string>} [options.preset] - preset for color palette (ex: ['#181818', '#292929'])\n         * @param {boolean} [options.useCustomSyntax=false] - whether use custom syntax or not\n         */\n        function colorSyntaxPlugin(context, options) {\n          if (options === void 0) {\n            options = {};\n          }\n          var eventEmitter = context.eventEmitter,\n            i18n = context.i18n,\n            _a = context.usageStatistics,\n            usageStatistics = _a === void 0 ? true : _a,\n            pmState = context.pmState;\n          var preset = options.preset;\n          var container = document.createElement('div');\n          var colorPickerOption = {\n            container: container,\n            usageStatistics: usageStatistics\n          };\n          addLangs(i18n);\n          if (preset) {\n            colorPickerOption.preset = preset;\n          }\n          var colorPicker = external_commonjs_tui_color_picker_commonjs2_tui_color_picker_amd_tui_color_picker_root_tui_colorPicker_default().create(colorPickerOption);\n          var button = createApplyButton(i18n.get('OK'));\n          eventEmitter.listen('focus', function (editType) {\n            containerClassName = \"\" + PREFIX + (editType === 'markdown' ? 'md' : 'ww') + \"-container\";\n          });\n          container.addEventListener('click', function (ev) {\n            if (ev.target.getAttribute('type') === 'button') {\n              var selectedColor = colorPicker.getColor();\n              currentEditorEl = getCurrentEditorEl(container, containerClassName);\n              eventEmitter.emit('command', 'color', {\n                selectedColor: selectedColor\n              });\n              eventEmitter.emit('closePopup');\n              // force the current editor to focus for preventing to lose focus\n              currentEditorEl.focus();\n            }\n          });\n          colorPicker.slider.toggle(true);\n          container.appendChild(button);\n          var toolbarItem = createToolbarItemOption(container, i18n);\n          return {\n            markdownCommands: {\n              color: function (_a, _b, dispatch) {\n                var selectedColor = _a.selectedColor;\n                var tr = _b.tr,\n                  selection = _b.selection,\n                  schema = _b.schema;\n                if (selectedColor) {\n                  var slice = selection.content();\n                  var textContent = slice.content.textBetween(0, slice.content.size, '\\n');\n                  var openTag = \"<span style=\\\"color: \" + selectedColor + \"\\\">\";\n                  var closeTag = \"</span>\";\n                  var colored = \"\" + openTag + textContent + closeTag;\n                  tr.replaceSelectionWith(schema.text(colored)).setSelection(createSelection(tr, selection, pmState.TextSelection, openTag, closeTag));\n                  dispatch(tr);\n                  return true;\n                }\n                return false;\n              }\n            },\n            wysiwygCommands: {\n              color: function (_a, _b, dispatch) {\n                var selectedColor = _a.selectedColor;\n                var tr = _b.tr,\n                  selection = _b.selection,\n                  schema = _b.schema;\n                if (selectedColor) {\n                  var from = selection.from,\n                    to = selection.to;\n                  var attrs = {\n                    htmlAttrs: {\n                      style: \"color: \" + selectedColor\n                    }\n                  };\n                  var mark = schema.marks.span.create(attrs);\n                  tr.addMark(from, to, mark);\n                  dispatch(tr);\n                  return true;\n                }\n                return false;\n              }\n            },\n            toolbarItems: [{\n              groupIndex: 0,\n              itemIndex: 3,\n              item: toolbarItem\n            }],\n            toHTMLRenderers: {\n              htmlInline: {\n                span: function (node, _a) {\n                  var entering = _a.entering;\n                  return entering ? {\n                    type: 'openTag',\n                    tagName: 'span',\n                    attributes: node.attrs\n                  } : {\n                    type: 'closeTag',\n                    tagName: 'span'\n                  };\n                }\n              }\n            }\n          };\n        }\n      }();\n      __webpack_exports__ = __webpack_exports__[\"default\"];\n      /******/\n      return __webpack_exports__;\n      /******/\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}